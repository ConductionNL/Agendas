openapi: 3.0.2
info:
  title: 'Agenda Component'
  version: V.0.1
  description: |
    API Details
    - Component: Agenda Component
    - Reference: ac
    - Enviroment: dev
    - Version: V.0.1
    - Repository: [online](https://github.com/ConductionNL/agenda-component) / [zip](https://github.com/ConductionNL/agenda-component/archive/master.zip)
    - Docker Image: [online](https://hub.docker.com/repository/docker/conduction/ac-php) 
    - Datamodel: [postman](/schema/ac.postman_collection.json) / [oas](/schema/openapi.yaml) / [pdf](/schema/datamodel.pdf) / [mwb](/schema/datamodel.mwb) 
    
    'Naast deze JSON rest API is er ook een [graphql](/graphql) interface beschikbaar.'         
    
paths:
  /alarms:
    get:
      tags:
        - Alarm
      operationId: getAlarmCollection
      summary: 'Retrieves the collection of Alarm resources.'
      responses:
        200:
          description: 'Alarm collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alarm-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Alarm:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alarm-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alarm-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alarm-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alarm-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alarm-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alarm-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Alarm
      operationId: postAlarmCollection
      summary: 'Creates a Alarm resource.'
      responses:
        201:
          description: 'Alarm resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Alarm:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Alarm-read'
          links:
            GetAlarmItem:
              parameters:
                id: '$response.body#/id'
              operationId: getAlarmItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /alarms/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Alarm-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Alarm:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Alarm-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Alarm-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Alarm-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Alarm-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Alarm-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Alarm-write'
        description: 'The new Alarm resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/alarms/{id}':
    get:
      tags:
        - Alarm
      operationId: getAlarmItem
      summary: 'Retrieves a Alarm resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Alarm resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Alarm:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Alarm-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Alarm
      operationId: deleteAlarmItem
      summary: 'Removes the Alarm resource.'
      responses:
        204:
          description: 'Alarm resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Alarm
      operationId: putAlarmItem
      summary: 'Replaces the Alarm resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Alarm resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Alarm:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Alarm-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Alarm-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Alarm:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Alarm-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Alarm-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Alarm-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Alarm-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Alarm-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Alarm-write'
        description: 'The updated Alarm resource'
    patch:
      tags:
        - Alarm
      operationId: patchAlarmItem
      summary: 'Updates the Alarm resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Alarm resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Alarm:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Alarm-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Alarm-write'
        description: 'The updated Alarm resource'
  /calendars:
    get:
      tags:
        - Calendar
      operationId: getCalendarCollection
      summary: 'Retrieves the collection of Calendar resources.'
      responses:
        200:
          description: 'Calendar collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Calendar-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Calendar:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Calendar-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Calendar-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Calendar-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Calendar-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Calendar-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Calendar-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Calendar
      operationId: postCalendarCollection
      summary: 'Creates a Calendar resource.'
      responses:
        201:
          description: 'Calendar resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Calendar:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Calendar-read'
          links:
            GetCalendarItem:
              parameters:
                id: '$response.body#/id'
              operationId: getCalendarItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /calendars/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Calendar-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Calendar:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Calendar-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Calendar-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Calendar-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Calendar-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Calendar-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Calendar-write'
        description: 'The new Calendar resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/calendars/{id}':
    get:
      tags:
        - Calendar
      operationId: getCalendarItem
      summary: 'Retrieves a Calendar resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Calendar resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Calendar:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Calendar-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Calendar
      operationId: deleteCalendarItem
      summary: 'Removes the Calendar resource.'
      responses:
        204:
          description: 'Calendar resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Calendar
      operationId: putCalendarItem
      summary: 'Replaces the Calendar resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Calendar resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Calendar:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Calendar-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Calendar-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Calendar:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Calendar-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Calendar-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Calendar-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Calendar-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Calendar-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Calendar-write'
        description: 'The updated Calendar resource'
    patch:
      tags:
        - Calendar
      operationId: patchCalendarItem
      summary: 'Updates the Calendar resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Calendar resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Calendar:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Calendar-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Calendar-write'
        description: 'The updated Calendar resource'
  /events:
    get:
      tags:
        - Event
      operationId: getEventCollection
      summary: 'Retrieves the collection of Event resources.'
      responses:
        200:
          description: 'Event collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Event:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Event
      operationId: postEventCollection
      summary: 'Creates a Event resource.'
      responses:
        201:
          description: 'Event resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Event:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Event-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Event-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Event-read'
          links:
            GetEventItem:
              parameters:
                id: '$response.body#/id'
              operationId: getEventItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /events/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Event-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Event:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Event-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Event-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Event-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Event-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Event-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Event-write'
        description: 'The new Event resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/events/{id}':
    get:
      tags:
        - Event
      operationId: getEventItem
      summary: 'Retrieves a Event resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Event resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Event:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Event-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Event-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Event-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Event
      operationId: deleteEventItem
      summary: 'Removes the Event resource.'
      responses:
        204:
          description: 'Event resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Event
      operationId: putEventItem
      summary: 'Replaces the Event resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Event resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Event:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Event-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Event-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Event-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Event-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Event:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Event-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Event-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Event-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Event-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Event-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Event-write'
        description: 'The updated Event resource'
    patch:
      tags:
        - Event
      operationId: patchEventItem
      summary: 'Updates the Event resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Event resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Event:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Event-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Event-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Event-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Event-write'
        description: 'The updated Event resource'
  /freebusies:
    get:
      tags:
        - Freebusy
      operationId: getFreebusyCollection
      summary: 'Retrieves the collection of Freebusy resources.'
      responses:
        200:
          description: 'Freebusy collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Freebusy-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Freebusy:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Freebusy-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Freebusy-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Freebusy-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Freebusy-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Freebusy-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Freebusy-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Freebusy
      operationId: postFreebusyCollection
      summary: 'Creates a Freebusy resource.'
      responses:
        201:
          description: 'Freebusy resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Freebusy:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
          links:
            GetFreebusyItem:
              parameters:
                url: '$response.body#/url'
              operationId: getFreebusyItem
              description: 'The `url` value returned in the response can be used as the `url` parameter in `GET /freebusies/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Freebusy-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Freebusy:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Freebusy-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Freebusy-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Freebusy-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Freebusy-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Freebusy-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Freebusy-write'
        description: 'The new Freebusy resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/freebusies/{id}':
    get:
      tags:
        - Freebusy
      operationId: getFreebusyItem
      summary: 'Retrieves a Freebusy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Freebusy resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Freebusy:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Freebusy
      operationId: deleteFreebusyItem
      summary: 'Removes the Freebusy resource.'
      responses:
        204:
          description: 'Freebusy resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Freebusy
      operationId: putFreebusyItem
      summary: 'Replaces the Freebusy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Freebusy resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Freebusy:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Freebusy-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Freebusy:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Freebusy-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Freebusy-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Freebusy-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Freebusy-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Freebusy-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Freebusy-write'
        description: 'The updated Freebusy resource'
    patch:
      tags:
        - Freebusy
      operationId: patchFreebusyItem
      summary: 'Updates the Freebusy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Freebusy resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Freebusy:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Freebusy-write'
        description: 'The updated Freebusy resource'
  /journals:
    get:
      tags:
        - Journal
      operationId: getJournalCollection
      summary: 'Retrieves the collection of Journal resources.'
      responses:
        200:
          description: 'Journal collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Journal-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Journal:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Journal-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Journal-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Journal-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Journal-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Journal-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Journal-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Journal
      operationId: postJournalCollection
      summary: 'Creates a Journal resource.'
      responses:
        201:
          description: 'Journal resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Journal:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Journal-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Journal-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Journal-read'
          links:
            GetJournalItem:
              parameters:
                id: '$response.body#/id'
              operationId: getJournalItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /journals/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Journal-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Journal:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Journal-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Journal-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Journal-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Journal-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Journal-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Journal-write'
        description: 'The new Journal resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/journals/{id}':
    get:
      tags:
        - Journal
      operationId: getJournalItem
      summary: 'Retrieves a Journal resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Journal resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Journal:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Journal-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Journal-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Journal-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Journal
      operationId: deleteJournalItem
      summary: 'Removes the Journal resource.'
      responses:
        204:
          description: 'Journal resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Journal
      operationId: putJournalItem
      summary: 'Replaces the Journal resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Journal resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Journal:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Journal-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Journal-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Journal-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Journal-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Journal:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Journal-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Journal-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Journal-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Journal-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Journal-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Journal-write'
        description: 'The updated Journal resource'
    patch:
      tags:
        - Journal
      operationId: patchJournalItem
      summary: 'Updates the Journal resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Journal resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Journal:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Journal-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Journal-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Journal-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Journal-write'
        description: 'The updated Journal resource'
  /resources:
    get:
      tags:
        - Resource
      operationId: getResourceCollection
      summary: 'Retrieves the collection of Resource resources.'
      responses:
        200:
          description: 'Resource collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Resource:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Resource
      operationId: postResourceCollection
      summary: 'Creates a Resource resource.'
      responses:
        201:
          description: 'Resource resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Resource:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Resource-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Resource-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Resource-read'
          links:
            GetResourceItem:
              parameters:
                id: '$response.body#/id'
              operationId: getResourceItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /resources/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Resource-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Resource:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Resource-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Resource-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Resource-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Resource-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Resource-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Resource-write'
        description: 'The new Resource resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/resources/{id}':
    get:
      tags:
        - Resource
      operationId: getResourceItem
      summary: 'Retrieves a Resource resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Resource resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Resource:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Resource-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Resource-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Resource-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Resource
      operationId: deleteResourceItem
      summary: 'Removes the Resource resource.'
      responses:
        204:
          description: 'Resource resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Resource
      operationId: putResourceItem
      summary: 'Replaces the Resource resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Resource resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Resource:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Resource-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Resource-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Resource-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Resource-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Resource:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Resource-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Resource-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Resource-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Resource-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Resource-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Resource-write'
        description: 'The updated Resource resource'
    patch:
      tags:
        - Resource
      operationId: patchResourceItem
      summary: 'Updates the Resource resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Resource resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Resource:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Resource-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Resource-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Resource-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Resource-write'
        description: 'The updated Resource resource'
  /schedules:
    get:
      tags:
        - Schedule
      operationId: getScheduleCollection
      summary: 'Retrieves the collection of Schedule resources.'
      responses:
        200:
          description: 'Schedule collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Schedule:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Schedule
      operationId: postScheduleCollection
      summary: 'Creates a Schedule resource.'
      responses:
        201:
          description: 'Schedule resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Schedule:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Schedule-read'
          links:
            GetScheduleItem:
              parameters:
                id: '$response.body#/id'
              operationId: getScheduleItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /schedules/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Schedule-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Schedule:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Schedule-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Schedule-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Schedule-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Schedule-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Schedule-write'
        description: 'The new Schedule resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/schedules/{id}':
    get:
      tags:
        - Schedule
      operationId: getScheduleItem
      summary: 'Retrieves a Schedule resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Schedule resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Schedule:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Schedule-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Schedule
      operationId: deleteScheduleItem
      summary: 'Removes the Schedule resource.'
      responses:
        204:
          description: 'Schedule resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Schedule
      operationId: putScheduleItem
      summary: 'Replaces the Schedule resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Schedule resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Schedule:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Schedule-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Schedule-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Schedule:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Schedule-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Schedule-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Schedule-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Schedule-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Schedule-write'
        description: 'The updated Schedule resource'
    patch:
      tags:
        - Schedule
      operationId: patchScheduleItem
      summary: 'Updates the Schedule resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Schedule resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Schedule:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Schedule-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Schedule-write'
        description: 'The updated Schedule resource'
  /todos:
    get:
      tags:
        - Todo
      operationId: getTodoCollection
      summary: 'Retrieves the collection of Todo resources.'
      responses:
        200:
          description: 'Todo collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Todo:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Todo
      operationId: postTodoCollection
      summary: 'Creates a Todo resource.'
      responses:
        201:
          description: 'Todo resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Todo:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Todo-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Todo-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Todo-read'
          links:
            GetTodoItem:
              parameters:
                id: '$response.body#/id'
              operationId: getTodoItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /todos/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Todo-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Todo:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Todo-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Todo-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Todo-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Todo-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Todo-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Todo-write'
        description: 'The new Todo resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/todos/{id}':
    get:
      tags:
        - Todo
      operationId: getTodoItem
      summary: 'Retrieves a Todo resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Todo resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Todo:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Todo-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Todo-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Todo-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Todo
      operationId: deleteTodoItem
      summary: 'Removes the Todo resource.'
      responses:
        204:
          description: 'Todo resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Todo
      operationId: putTodoItem
      summary: 'Replaces the Todo resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Todo resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Todo:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Todo-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Todo-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Todo-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Todo-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Todo:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Todo-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Todo-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Todo-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Todo-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Todo-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Todo-write'
        description: 'The updated Todo resource'
    patch:
      tags:
        - Todo
      operationId: patchTodoItem
      summary: 'Updates the Todo resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Todo resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Todo:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Todo-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Todo-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Todo-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Todo-write'
        description: 'The updated Todo resource'
security:
  -
    apiKey: []
components:
  schemas:
    Alarm-read:
      type: object
      description: 'Used to describe alarms for Events and Todos.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        summary:
          description: 'The summary of this event.'
          type: string
        action:
          description: 'The action of the alarm.'
          type: string
        trigger:
          description: 'The time the alarm should trigger relative to the start time of the related event.'
          type: integer
        duration:
          description: 'The time until the alarm repeats.'
          type: integer
        repeat:
          description: 'The number of times the alarm repeats.'
          type: integer
        event:
          $ref: '#/components/schemas/Event-read'
        todo:
          $ref: '#/components/schemas/Todo-read'
      required:
        - name
        - summary
        - action
        - trigger
        - duration
        - repeat
    Alarm-write:
      type: object
      description: 'Used to describe alarms for Events and Todos.'
      required:
        - name
        - summary
        - action
        - trigger
        - duration
        - repeat
      properties:
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        summary:
          description: 'The summary of this event.'
          type: string
        action:
          description: 'The action of the alarm.'
          type: string
        trigger:
          description: 'The time the alarm should trigger relative to the start time of the related event.'
          type: integer
        duration:
          description: 'The time until the alarm repeats.'
          type: integer
        repeat:
          description: 'The number of times the alarm repeats.'
          type: integer
        event:
          $ref: '#/components/schemas/Event-write'
        todo:
          $ref: '#/components/schemas/Todo-write'
    'Alarm:jsonld-read':
      type: object
      description: 'Used to describe alarms for Events and Todos.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
        name:
          description: 'The name of this Calendar'
          type: string
        description:
          description: 'An short description of this Calenda'
          type: string
        events:
          description: 'Events that belong to this Calendar'
          type: array
          items:
            $ref: '#/components/schemas/Event-read'
        schedules:
          description: 'Schedules that belong to this Calendar'
          type: array
          items:
            $ref: '#/components/schemas/Schedule-read'
        timeZone:
          description: 'The time zone of this calendar'
          type: string
        freebusies:
          type: array
          items:
            $ref: '#/components/schemas/Freebusy-read'
        journals:
          type: array
          items:
            $ref: '#/components/schemas/Journal-read'
        todos:
          type: array
          items:
            $ref: '#/components/schemas/Todo-read'
      required:
        - name
        - timeZone
    Calendar-write:
      type: object
      description: 'A Calendar is a collection of events tied to an unque person or resource.'
      required:
        - name
        - timeZone
      properties:
        name:
          description: 'The name of this Calendar'
          type: string
        description:
          description: 'An short description of this Calenda'
          type: string
        events:
          description: 'Events that belong to this Calendar'
          type: array
          items:
            $ref: '#/components/schemas/Event-write'
        schedules:
          description: 'Schedules that belong to this Calendar'
          type: array
          items:
            $ref: '#/components/schemas/Schedule-write'
        timeZone:
          description: 'The time zone of this calendar'
          type: string
        freebusies:
          type: array
          items:
            $ref: '#/components/schemas/Freebusy-write'
        journals:
          type: array
          items:
            $ref: '#/components/schemas/Journal-write'
        todos:
          type: array
          items:
            $ref: '#/components/schemas/Todo-write'
    Event-read:
      type: object
      description: 'An event happening at a certain time and location, such as a concert, lecture, meeting or festival.'
      externalDocs:
        url: 'https://schema.org/Event'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        startDate:
          description: 'The moment this event starts'
          type: string
          format: date-time
        endDate:
          description: 'The moment this event ends'
          type: string
          format: date-time
        location:
          description: 'The location of this event'
          type: string
        schedule:
          description: 'An optional Schedule to which this event belongs'
          $ref: '#/components/schemas/Schedule-read'
        calendar:
          description: 'The Calendar to wich this event belongs'
          $ref: '#/components/schemas/Calendar-read'
        class:
          description: 'The security class of this event.'
          type: string
        created:
          description: 'The creation in datetime of this event.'
          type: string
          format: date-time
        geo:
          description: 'The coordinates of this event.'
          type: string
        lastMod:
          description: 'The last modification of this event in datetime.'
          type: string
          format: date-time
        organiser:
          description: 'The organiser of this event linked to with an url.'
          type: string
        status:
          description: 'The status of this evemt.'
          type: string
        summary:
          description: 'The summary of this event.'
          type: string
        transp:
          description: 'The determination if the event should block the duration of the event for participants.'
          type: string
        url:
          description: 'The url of this event.'
          type: string
        duration:
          description: 'The duration of this event.'
          type: integer
        contact:
          description: 'Url of this person'
          type: string
        seq:
          description: 'The version number of this event.'
          type: integer
        priority:
          description: 'The priority of this event ranging from 1 (high) to 9 (low).'
          type: integer
        attendees:
          description: 'The urls of the attendees of this event.'
          type: array
          items:
            type: string
        attachments:
          readOnly: true
          description: 'The urls of the attachments of this event.'
          type: array
          items:
            type: string
        categories:
          description: 'The urls of the catergories this event belongs to.'
          type: array
          items:
            type: string
        comments:
          description: 'The urls of the comments that belong to this event.'
          type: array
          items:
            type: string
        related:
          type: array
          items:
            $ref: '#/components/schemas/Event-read'
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource-read'
        alarms:
          type: array
          items:
            $ref: '#/components/schemas/Alarm-read'
        journal:
          $ref: '#/components/schemas/Journal-read'
      required:
        - name
        - startDate
        - endDate
        - location
        - class
        - created
        - lastMod
        - organiser
        - status
        - summary
        - transp
        - url
        - duration
        - contact
        - seq
        - priority
    Event-write:
      type: object
      description: 'An event happening at a certain time and location, such as a concert, lecture, meeting or festival.'
      externalDocs:
        url: 'https://schema.org/Event'
      required:
        - name
        - startDate
        - endDate
        - location
        - class
        - created
        - lastMod
        - organiser
        - status
        - summary
        - transp
        - url
        - duration
        - contact
        - seq
        - priority
      properties:
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        startDate:
          description: 'The moment this event starts'
          type: string
          format: date-time
        endDate:
          description: 'The moment this event ends'
          type: string
          format: date-time
        location:
          description: 'The location of this event'
          type: string
        schedule:
          description: 'An optional Schedule to which this event belongs'
          $ref: '#/components/schemas/Schedule-write'
        calendar:
          description: 'The Calendar to wich this event belongs'
          $ref: '#/components/schemas/Calendar-write'
        class:
          description: 'The security class of this event.'
          type: string
        created:
          description: 'The creation in datetime of this event.'
          type: string
          format: date-time
        geo:
          description: 'The coordinates of this event.'
          type: string
        lastMod:
          description: 'The last modification of this event in datetime.'
          type: string
          format: date-time
        organiser:
          description: 'The organiser of this event linked to with an url.'
          type: string
        status:
          description: 'The status of this evemt.'
          type: string
        summary:
          description: 'The summary of this event.'
          type: string
        transp:
          description: 'The determination if the event should block the duration of the event for participants.'
          type: string
        url:
          description: 'The url of this event.'
          type: string
        duration:
          description: 'The duration of this event.'
          type: integer
        contact:
          description: 'Url of this person'
          type: string
        seq:
          description: 'The version number of this event.'
          type: integer
        priority:
          description: 'The priority of this event ranging from 1 (high) to 9 (low).'
          type: integer
        attendees:
          description: 'The urls of the attendees of this event.'
          type: array
          items:
            type: string
        attachments:
          readOnly: true
          description: 'The urls of the attachments of this event.'
          type: array
          items:
            type: string
        categories:
          description: 'The urls of the catergories this event belongs to.'
          type: array
          items:
            type: string
        comments:
          description: 'The urls of the comments that belong to this event.'
          type: array
          items:
            type: string
        related:
          type: array
          items:
            $ref: '#/components/schemas/Event-write'
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource-write'
        alarms:
          type: array
          items:
            $ref: '#/components/schemas/Alarm-write'
        journal:
          $ref: '#/components/schemas/Journal-write'
    Freebusy-read:
      type: object
      description: 'This entity checks if a person is free or busy for a event.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        url:
          description: 'The url of this event.'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        attendee:
          description: 'The urls of the attendees of this event.'
          type: string
        comments:
          description: 'The urls of the comments that belong to this event.'
          type: array
          items:
            type: string
        contact:
          description: 'Url of this person'
          type: string
        startDate:
          description: 'The moment this event starts'
          type: string
          format: date-time
        endDate:
          description: 'The moment this event ends'
          type: string
          format: date-time
        duration:
          description: 'The duration of this event.'
          type: integer
        organiser:
          description: 'The organiser of this event linked to with an url.'
          type: string
        freebusy:
          description: 'The determination of the type freebusy.'
          type: string
        calendar:
          $ref: '#/components/schemas/Calendar-read'
        schedule:
          $ref: '#/components/schemas/Schedule-read'
      required:
        - url
        - attendee
        - contact
        - startDate
        - endDate
        - duration
        - organiser
        - freebusy
    Freebusy-write:
      type: object
      description: 'This entity checks if a person is free or busy for a event.'
      required:
        - url
        - attendee
        - contact
        - startDate
        - endDate
        - duration
        - organiser
        - freebusy
      properties:
        url:
          description: 'The url of this event.'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        attendee:
          description: 'The urls of the attendees of this event.'
          type: string
        comments:
          description: 'The urls of the comments that belong to this event.'
          type: array
          items:
            type: string
        contact:
          description: 'Url of this person'
          type: string
        startDate:
          description: 'The moment this event starts'
          type: string
          format: date-time
        endDate:
          description: 'The moment this event ends'
          type: string
          format: date-time
        duration:
          description: 'The duration of this event.'
          type: integer
        organiser:
          description: 'The organiser of this event linked to with an url.'
          type: string
        freebusy:
          description: 'The determination of the type freebusy.'
          type: string
        calendar:
          $ref: '#/components/schemas/Calendar-write'
        schedule:
          $ref: '#/components/schemas/Schedule-write'
    Journal-read:
      type: object
      description: 'A journal from an event.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        summary:
          description: 'The summary of this event.'
          type: string
        action:
          description: 'The action of the alarm.'
          type: string
        trigger:
          description: 'The time the alarm should trigger relative to the start time of the related event.'
          type: integer
        duration:
          description: 'The time until the alarm repeats.'
          type: integer
        repeat:
          description: 'The number of times the alarm repeats.'
          type: integer
        event:
          $ref: '#/components/schemas/Event:jsonld-read'
        todo:
          $ref: '#/components/schemas/Todo:jsonld-read'
      required:
        - name
        - summary
        - action
        - trigger
        - duration
        - repeat
    'Alarm:jsonld-write':
      type: object
      description: 'Used to describe alarms for Events and Todos.'
      required:
        - name
        - summary
        - action
        - trigger
        - duration
        - repeat
      properties:
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        startDate:
          description: 'The moment this event starts'
          type: string
          format: date-time
        endDate:
          description: 'The moment this event ends'
          type: string
          format: date-time
        class:
          description: 'The security class of this event.'
          type: string
        created:
          description: 'The creation in datetime of this event.'
          type: string
          format: date-time
        lastMod:
          description: 'The last modification of this event in datetime.'
          type: string
          format: date-time
        organiser:
          description: 'The organiser of this event linked to with an url.'
          type: string
        contact:
          description: 'Url of this person'
          type: string
        status:
          description: 'The status of this evemt.'
          type: string
        summary:
          description: 'The summary of this event.'
          type: string
        transp:
          description: 'The determination if the event should block the duration of the event for participants.'
          type: string
        url:
          description: 'The url of this event.'
          type: string
        duration:
          description: 'The duration of this event.'
          type: integer
        seq:
          description: 'The version number of this event.'
          type: integer
        priority:
          description: 'The priority of this event ranging from 1 (high) to 9 (low).'
          type: integer
        attendees:
          description: 'The urls of the attendees of this event.'
          type: array
          items:
            type: string
        attachments:
          readOnly: true
          description: 'The urls of the attachments of this event.'
          type: array
          items:
            type: string
        categories:
          description: 'The urls of the catergories this event belongs to.'
          type: array
          items:
            type: string
        comments:
          description: 'The urls of the comments that belong to this event.'
          type: array
          items:
            type: string
        calendar:
          $ref: '#/components/schemas/Calendar-write'
        event:
          $ref: '#/components/schemas/Event-write'
    Resource-read:
      type: object
      description: 'Describes resources that can be needed for an event.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event-read'
        todos:
          type: array
          items:
            $ref: '#/components/schemas/Todo-read'
      required:
        - name
    Resource-write:
      type: object
      description: 'Describes resources that can be needed for an event.'
      required:
        - name
      properties:
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event-write'
        todos:
          type: array
          items:
            $ref: '#/components/schemas/Todo-write'
    Schedule-read:
      type: object
      description: 'A schedule defines a repeating time period used to describe a regularly occurring Event. At a minimum a schedule will specify repeatFrequency which describes the interval between occurences of the event. Additional information can be provided to specify the schedule more precisely. This includes identifying the day(s) of the week or month when the recurring event will take place, in addition to its start and end time. Schedules may also have start and end dates to indicate when they are active, e.g. to define a limited calendar of events.'
      externalDocs:
        url: 'http://schema.org/PostalAddress'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
        name:
          description: 'The name of this Schedule'
          type: string
        description:
          description: 'An short description of this Schedule'
          type: string
        byDay:
          description: 'Defines the day(s) of the week on which a recurring Event takes place. Sunday is both 0 and 7.'
          type: integer
        byMonth:
          description: 'Defines the month(s) of the year on which a recurring Event takes place. Specified as an Integer between 1-12. January is 1.'
          type: integer
        byMonthDay:
          description: 'Defines the day(s) of the month on which a recurring Event takes place. Specified as an Integer between 1-31.'
          type: integer
        events:
          description: 'The that belong to or are coused by this Schedule'
          type: array
          items:
            $ref: '#/components/schemas/Event-read'
        exceptDates:
          description: 'Defines the day(s) of the month on which a recurring Event takes place. Specified as an Integer between 1-31.'
          type: array
          items:
            type: string
        repeatCount:
          description: 'Defines the number of times a recurring Event will take place'
          type: integer
        repeatFrequency:
          description: 'Defines the frequency at which Events will occur according to a schedule Schedule. The intervals between events should be defined as a [Duration](https://en.wikipedia.org/wiki/ISO_8601#Durations) of time.'
          type: string
        calendar:
          description: 'The Calendar to wich this Schedule belongs'
          $ref: '#/components/schemas/Calendar-read'
        freebusies:
          type: array
          items:
            $ref: '#/components/schemas/Freebusy-read'
        todos:
          type: array
          items:
            $ref: '#/components/schemas/Todo-read'
      required:
        - name
    Schedule-write:
      type: object
      description: 'A schedule defines a repeating time period used to describe a regularly occurring Event. At a minimum a schedule will specify repeatFrequency which describes the interval between occurences of the event. Additional information can be provided to specify the schedule more precisely. This includes identifying the day(s) of the week or month when the recurring event will take place, in addition to its start and end time. Schedules may also have start and end dates to indicate when they are active, e.g. to define a limited calendar of events.'
      externalDocs:
        url: 'http://schema.org/PostalAddress'
      required:
        - name
      properties:
        name:
          description: 'The name of this Schedule'
          type: string
        description:
          description: 'An short description of this Schedule'
          type: string
        byDay:
          description: 'Defines the day(s) of the week on which a recurring Event takes place. Sunday is both 0 and 7.'
          type: integer
        byMonth:
          description: 'Defines the month(s) of the year on which a recurring Event takes place. Specified as an Integer between 1-12. January is 1.'
          type: integer
        byMonthDay:
          description: 'Defines the day(s) of the month on which a recurring Event takes place. Specified as an Integer between 1-31.'
          type: integer
        events:
          description: 'The that belong to or are coused by this Schedule'
          type: array
          items:
            $ref: '#/components/schemas/Event-write'
        exceptDates:
          description: 'Defines the day(s) of the month on which a recurring Event takes place. Specified as an Integer between 1-31.'
          type: array
          items:
            type: string
        repeatCount:
          description: 'Defines the number of times a recurring Event will take place'
          type: integer
        repeatFrequency:
          description: 'Defines the frequency at which Events will occur according to a schedule Schedule. The intervals between events should be defined as a [Duration](https://en.wikipedia.org/wiki/ISO_8601#Durations) of time.'
          type: string
        calendar:
          description: 'The Calendar to wich this Schedule belongs'
          $ref: '#/components/schemas/Calendar-write'
        freebusies:
          type: array
          items:
            $ref: '#/components/schemas/Freebusy-write'
        todos:
          type: array
          items:
            $ref: '#/components/schemas/Todo-write'
    Todo-read:
      type: object
      description: 'A to-do from an event.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        summary:
          description: 'The summary of this event.'
          type: string
        action:
          description: 'The action of the alarm.'
          type: string
        trigger:
          description: 'The time the alarm should trigger relative to the start time of the related event.'
          type: integer
        duration:
          description: 'The time until the alarm repeats.'
          type: integer
        repeat:
          description: 'The number of times the alarm repeats.'
          type: integer
        event:
          $ref: '#/components/schemas/Event:jsonld-write'
        todo:
          $ref: '#/components/schemas/Todo:jsonld-write'
    Calendar-read:
      type: object
      description: 'A Calendar is a collection of events tied to an unque person or resource.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this Calendar'
          type: string
        description:
          description: 'An short description of this Calenda'
          type: string
        events:
          description: 'Events that belong to this Calendar'
          type: array
          items:
            $ref: '#/components/schemas/Event-read'
        schedules:
          description: 'Schedules that belong to this Calendar'
          type: array
          items:
            $ref: '#/components/schemas/Schedule-read'
        timeZone:
          description: 'The time zone of this calendar'
          type: string
        freebusies:
          type: array
          items:
            $ref: '#/components/schemas/Freebusy-read'
        journals:
          type: array
          items:
            $ref: '#/components/schemas/Journal-read'
        todos:
          type: array
          items:
            $ref: '#/components/schemas/Todo-read'
      required:
        - name
        - timeZone
    Calendar-write:
      type: object
      description: 'A Calendar is a collection of events tied to an unque person or resource.'
      required:
        - name
        - timeZone
      properties:
        name:
          description: 'The name of this Calendar'
          type: string
        description:
          description: 'An short description of this Calenda'
          type: string
        events:
          description: 'Events that belong to this Calendar'
          type: array
          items:
            $ref: '#/components/schemas/Event-write'
        schedules:
          description: 'Schedules that belong to this Calendar'
          type: array
          items:
            $ref: '#/components/schemas/Schedule-write'
        timeZone:
          description: 'The time zone of this calendar'
          type: string
        freebusies:
          type: array
          items:
            $ref: '#/components/schemas/Freebusy-write'
        journals:
          type: array
          items:
            $ref: '#/components/schemas/Journal-write'
        todos:
          type: array
          items:
            $ref: '#/components/schemas/Todo-write'
    'Calendar:jsonld-read':
      type: object
      description: 'A Calendar is a collection of events tied to an unque person or resource.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this Calendar'
          type: string
        description:
          description: 'An short description of this Calenda'
          type: string
        events:
          description: 'Events that belong to this Calendar'
          type: array
          items:
            $ref: '#/components/schemas/Event:jsonld-read'
        schedules:
          description: 'Schedules that belong to this Calendar'
          type: array
          items:
            $ref: '#/components/schemas/Schedule:jsonld-read'
        timeZone:
          description: 'The time zone of this calendar'
          type: string
        freebusies:
          type: array
          items:
            $ref: '#/components/schemas/Freebusy:jsonld-read'
        journals:
          type: array
          items:
            $ref: '#/components/schemas/Journal:jsonld-read'
        todos:
          type: array
          items:
            $ref: '#/components/schemas/Todo:jsonld-read'
      required:
        - name
        - timeZone
    'Calendar:jsonld-write':
      type: object
      description: 'A Calendar is a collection of events tied to an unque person or resource.'
      required:
        - name
        - timeZone
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this Calendar'
          type: string
        description:
          description: 'An short description of this Calenda'
          type: string
        events:
          description: 'Events that belong to this Calendar'
          type: array
          items:
            $ref: '#/components/schemas/Event:jsonld-write'
        schedules:
          description: 'Schedules that belong to this Calendar'
          type: array
          items:
            $ref: '#/components/schemas/Schedule:jsonld-write'
        timeZone:
          description: 'The time zone of this calendar'
          type: string
        freebusies:
          type: array
          items:
            $ref: '#/components/schemas/Freebusy:jsonld-write'
        journals:
          type: array
          items:
            $ref: '#/components/schemas/Journal:jsonld-write'
        todos:
          type: array
          items:
            $ref: '#/components/schemas/Todo:jsonld-write'
    Event-read:
      type: object
      description: 'An event happening at a certain time and location, such as a concert, lecture, meeting or festival.'
      externalDocs:
        url: 'https://schema.org/Event'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        startDate:
          description: 'The moment this event starts'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        endDate:
          description: 'The moment this event ends'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        location:
          description: 'The location of this event'
          type: string
        schedule:
          description: 'An optional Schedule to which this event belongs'
          $ref: '#/components/schemas/Schedule-read'
        calendar:
          description: 'The Calendar to wich this event belongs'
          $ref: '#/components/schemas/Calendar-read'
        class:
          description: 'The security class of this event.'
          type: string
        created:
          description: 'The creation in datetime of this event.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        geo:
          description: 'The coordinates of this event.'
          type: string
        lastMod:
          description: 'The last modification of this event in datetime.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        organiser:
          description: 'The organiser of this event linked to with an url.'
          type: string
        status:
          description: 'The status of this evemt.'
          type: string
        summary:
          description: 'The summary of this event.'
          type: string
        transp:
          description: 'The determination if the event should block the duration of the event for participants.'
          type: string
        url:
          description: 'The url of this event.'
          type: string
        duration:
          description: 'The duration of this event.'
          type: integer
        contact:
          description: 'Url of this person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        seq:
          description: 'The version number of this event.'
          type: integer
        priority:
          description: 'The priority of this event ranging from 1 (high) to 9 (low).'
          type: integer
        attendees:
          description: 'The urls of the attendees of this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        attachments:
          readOnly: true
          description: 'The urls of the attachments of this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        categories:
          description: 'The urls of the catergories this event belongs to.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        comments:
          description: 'The urls of the comments that belong to this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        related:
          type: array
          items:
            $ref: '#/components/schemas/Event-read'
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource-read'
        alarms:
          type: array
          items:
            $ref: '#/components/schemas/Alarm-read'
        journal:
          $ref: '#/components/schemas/Journal-read'
      required:
        - name
        - startDate
        - endDate
        - location
        - class
        - created
        - lastMod
        - organiser
        - status
        - summary
        - transp
        - url
        - duration
        - contact
        - seq
        - priority
    Event-write:
      type: object
      description: 'An event happening at a certain time and location, such as a concert, lecture, meeting or festival.'
      externalDocs:
        url: 'https://schema.org/Event'
      required:
        - name
        - startDate
        - endDate
        - location
        - class
        - created
        - lastMod
        - organiser
        - status
        - summary
        - transp
        - url
        - duration
        - contact
        - seq
        - priority
      properties:
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        startDate:
          description: 'The moment this event starts'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        endDate:
          description: 'The moment this event ends'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        location:
          description: 'The location of this event'
          type: string
        schedule:
          description: 'An optional Schedule to which this event belongs'
          $ref: '#/components/schemas/Schedule-write'
        calendar:
          description: 'The Calendar to wich this event belongs'
          $ref: '#/components/schemas/Calendar-write'
        class:
          description: 'The security class of this event.'
          type: string
        created:
          description: 'The creation in datetime of this event.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        geo:
          description: 'The coordinates of this event.'
          type: string
        lastMod:
          description: 'The last modification of this event in datetime.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        organiser:
          description: 'The organiser of this event linked to with an url.'
          type: string
        status:
          description: 'The status of this evemt.'
          type: string
        summary:
          description: 'The summary of this event.'
          type: string
        transp:
          description: 'The determination if the event should block the duration of the event for participants.'
          type: string
        url:
          description: 'The url of this event.'
          type: string
        duration:
          description: 'The duration of this event.'
          type: integer
        contact:
          description: 'Url of this person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        seq:
          description: 'The version number of this event.'
          type: integer
        priority:
          description: 'The priority of this event ranging from 1 (high) to 9 (low).'
          type: integer
        attendees:
          description: 'The urls of the attendees of this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        attachments:
          readOnly: true
          description: 'The urls of the attachments of this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        categories:
          description: 'The urls of the catergories this event belongs to.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        comments:
          description: 'The urls of the comments that belong to this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        related:
          type: array
          items:
            $ref: '#/components/schemas/Event-write'
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource-write'
        alarms:
          type: array
          items:
            $ref: '#/components/schemas/Alarm-write'
        journal:
          $ref: '#/components/schemas/Journal-write'
    'Event:jsonld-read':
      type: object
      description: 'An event happening at a certain time and location, such as a concert, lecture, meeting or festival.'
      externalDocs:
        url: 'https://schema.org/Event'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        startDate:
          description: 'The moment this event starts'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        endDate:
          description: 'The moment this event ends'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        location:
          description: 'The location of this event'
          type: string
        schedule:
          description: 'An optional Schedule to which this event belongs'
          $ref: '#/components/schemas/Schedule:jsonld-read'
        calendar:
          description: 'The Calendar to wich this event belongs'
          $ref: '#/components/schemas/Calendar:jsonld-read'
        class:
          description: 'The security class of this event.'
          type: string
        created:
          description: 'The creation in datetime of this event.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        geo:
          description: 'The coordinates of this event.'
          type: string
        lastMod:
          description: 'The last modification of this event in datetime.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        organiser:
          description: 'The organiser of this event linked to with an url.'
          type: string
        status:
          description: 'The status of this evemt.'
          type: string
        summary:
          description: 'The summary of this event.'
          type: string
        transp:
          description: 'The determination if the event should block the duration of the event for participants.'
          type: string
        url:
          description: 'The url of this event.'
          type: string
        duration:
          description: 'The duration of this event.'
          type: integer
        contact:
          description: 'Url of this person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        seq:
          description: 'The version number of this event.'
          type: integer
        priority:
          description: 'The priority of this event ranging from 1 (high) to 9 (low).'
          type: integer
        attendees:
          description: 'The urls of the attendees of this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        attachments:
          readOnly: true
          description: 'The urls of the attachments of this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        categories:
          description: 'The urls of the catergories this event belongs to.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        comments:
          description: 'The urls of the comments that belong to this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        related:
          type: array
          items:
            $ref: '#/components/schemas/Event:jsonld-read'
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource:jsonld-read'
        alarms:
          type: array
          items:
            $ref: '#/components/schemas/Alarm:jsonld-read'
        journal:
          $ref: '#/components/schemas/Journal:jsonld-read'
      required:
        - name
        - startDate
        - endDate
        - location
        - class
        - created
        - lastMod
        - organiser
        - status
        - summary
        - transp
        - url
        - duration
        - contact
        - seq
        - priority
    'Event:jsonld-write':
      type: object
      description: 'An event happening at a certain time and location, such as a concert, lecture, meeting or festival.'
      externalDocs:
        url: 'https://schema.org/Event'
      required:
        - name
        - startDate
        - endDate
        - location
        - class
        - created
        - lastMod
        - organiser
        - status
        - summary
        - transp
        - url
        - duration
        - contact
        - seq
        - priority
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        startDate:
          description: 'The moment this event starts'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        endDate:
          description: 'The moment this event ends'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        location:
          description: 'The location of this event'
          type: string
        schedule:
          description: 'An optional Schedule to which this event belongs'
          $ref: '#/components/schemas/Schedule:jsonld-write'
        calendar:
          description: 'The Calendar to wich this event belongs'
          $ref: '#/components/schemas/Calendar:jsonld-write'
        class:
          description: 'The security class of this event.'
          type: string
        created:
          description: 'The creation in datetime of this event.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        geo:
          description: 'The coordinates of this event.'
          type: string
        lastMod:
          description: 'The last modification of this event in datetime.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        organiser:
          description: 'The organiser of this event linked to with an url.'
          type: string
        status:
          description: 'The status of this evemt.'
          type: string
        summary:
          description: 'The summary of this event.'
          type: string
        transp:
          description: 'The determination if the event should block the duration of the event for participants.'
          type: string
        url:
          description: 'The url of this event.'
          type: string
        duration:
          description: 'The duration of this event.'
          type: integer
        contact:
          description: 'Url of this person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        seq:
          description: 'The version number of this event.'
          type: integer
        priority:
          description: 'The priority of this event ranging from 1 (high) to 9 (low).'
          type: integer
        attendees:
          description: 'The urls of the attendees of this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        attachments:
          readOnly: true
          description: 'The urls of the attachments of this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        categories:
          description: 'The urls of the catergories this event belongs to.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        comments:
          description: 'The urls of the comments that belong to this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        related:
          type: array
          items:
            $ref: '#/components/schemas/Event:jsonld-write'
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource:jsonld-write'
        alarms:
          type: array
          items:
            $ref: '#/components/schemas/Alarm:jsonld-write'
        journal:
          $ref: '#/components/schemas/Journal:jsonld-write'
    Freebusy-read:
      type: object
      description: 'This entity checks if a person is free or busy for a event.'
      properties:
        url:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        attendee:
          description: 'The urls of the attendees of this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        comments:
          description: 'The urls of the comments that belong to this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        contact:
          description: 'Url of this person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        startDate:
          description: 'The moment this event starts'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        endDate:
          description: 'The moment this event ends'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        duration:
          description: 'The duration of this event.'
          type: integer
        organiser:
          description: 'The organiser of this event linked to with an url.'
          type: string
        freebusy:
          description: 'The determination of the type freebusy.'
          type: string
        calendar:
          $ref: '#/components/schemas/Calendar-read'
        schedule:
          $ref: '#/components/schemas/Schedule-read'
      required:
        - attendee
        - contact
        - startDate
        - endDate
        - duration
        - organiser
        - freebusy
    Freebusy-write:
      type: object
      description: 'This entity checks if a person is free or busy for a event.'
      properties:
        url:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        attendee:
          description: 'The urls of the attendees of this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        comments:
          description: 'The urls of the comments that belong to this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        contact:
          description: 'Url of this person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        startDate:
          description: 'The moment this event starts'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        endDate:
          description: 'The moment this event ends'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        duration:
          description: 'The duration of this event.'
          type: integer
        organiser:
          description: 'The organiser of this event linked to with an url.'
          type: string
        freebusy:
          description: 'The determination of the type freebusy.'
          type: string
        calendar:
          $ref: '#/components/schemas/Calendar-write'
        schedule:
          $ref: '#/components/schemas/Schedule-write'
      required:
        - attendee
        - contact
        - startDate
        - endDate
        - duration
        - organiser
        - freebusy
    'Freebusy:jsonld-read':
      type: object
      description: 'This entity checks if a person is free or busy for a event.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        url:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        attendee:
          description: 'The urls of the attendees of this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        comments:
          description: 'The urls of the comments that belong to this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        contact:
          description: 'Url of this person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        startDate:
          description: 'The moment this event starts'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        endDate:
          description: 'The moment this event ends'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        duration:
          description: 'The duration of this event.'
          type: integer
        organiser:
          description: 'The organiser of this event linked to with an url.'
          type: string
        freebusy:
          description: 'The determination of the type freebusy.'
          type: string
        calendar:
          $ref: '#/components/schemas/Calendar:jsonld-read'
        schedule:
          $ref: '#/components/schemas/Schedule:jsonld-read'
      required:
        - attendee
        - contact
        - startDate
        - endDate
        - duration
        - organiser
        - freebusy
    'Freebusy:jsonld-write':
      type: object
      description: 'This entity checks if a person is free or busy for a event.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        url:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        attendee:
          description: 'The urls of the attendees of this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        comments:
          description: 'The urls of the comments that belong to this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        contact:
          description: 'Url of this person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        startDate:
          description: 'The moment this event starts'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        endDate:
          description: 'The moment this event ends'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        duration:
          description: 'The duration of this event.'
          type: integer
        organiser:
          description: 'The organiser of this event linked to with an url.'
          type: string
        freebusy:
          description: 'The determination of the type freebusy.'
          type: string
        calendar:
          $ref: '#/components/schemas/Calendar:jsonld-write'
        schedule:
          $ref: '#/components/schemas/Schedule:jsonld-write'
      required:
        - attendee
        - contact
        - startDate
        - endDate
        - duration
        - organiser
        - freebusy
    Journal-read:
      type: object
      description: 'A journal from an event.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        startDate:
          description: 'The moment this event starts'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        endDate:
          description: 'The moment this event ends'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        class:
          description: 'The security class of this event.'
          type: string
        created:
          description: 'The creation in datetime of this event.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        lastMod:
          description: 'The last modification of this event in datetime.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        organiser:
          description: 'The organiser of this event linked to with an url.'
          type: string
        status:
          description: 'The status of this evemt.'
          type: string
        summary:
          description: 'The summary of this event.'
          type: string
        transp:
          description: 'The determination if the event should block the duration of the event for participants.'
          type: string
        url:
          description: 'The url of this event.'
          type: string
        duration:
          description: 'The duration of this event.'
          type: integer
        seq:
          description: 'The version number of this event.'
          type: integer
        priority:
          description: 'The priority of this event ranging from 1 (high) to 9 (low).'
          type: integer
        attendees:
          description: 'The urls of the attendees of this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        attachments:
          readOnly: true
          description: 'The urls of the attachments of this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        categories:
          description: 'The urls of the catergories this event belongs to.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        comments:
          description: 'The urls of the comments that belong to this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        calendar:
          $ref: '#/components/schemas/Calendar-read'
        event:
          $ref: '#/components/schemas/Event-read'
      required:
        - name
        - startDate
        - endDate
        - class
        - created
        - lastMod
        - organiser
        - status
        - summary
        - transp
        - url
        - duration
        - seq
        - priority
    Journal-write:
      type: object
      description: 'A journal from an event.'
      required:
        - name
        - startDate
        - endDate
        - class
        - created
        - lastMod
        - organiser
        - status
        - summary
        - transp
        - url
        - duration
        - seq
        - priority
      properties:
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        startDate:
          description: 'The moment this event starts'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        endDate:
          description: 'The moment this event ends'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        class:
          description: 'The security class of this event.'
          type: string
        created:
          description: 'The creation in datetime of this event.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        lastMod:
          description: 'The last modification of this event in datetime.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        organiser:
          description: 'The organiser of this event linked to with an url.'
          type: string
        status:
          description: 'The status of this evemt.'
          type: string
        summary:
          description: 'The summary of this event.'
          type: string
        transp:
          description: 'The determination if the event should block the duration of the event for participants.'
          type: string
        url:
          description: 'The url of this event.'
          type: string
        duration:
          description: 'The duration of this event.'
          type: integer
        seq:
          description: 'The version number of this event.'
          type: integer
        priority:
          description: 'The priority of this event ranging from 1 (high) to 9 (low).'
          type: integer
        attendees:
          description: 'The urls of the attendees of this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        attachments:
          readOnly: true
          description: 'The urls of the attachments of this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        categories:
          description: 'The urls of the catergories this event belongs to.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        comments:
          description: 'The urls of the comments that belong to this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        calendar:
          $ref: '#/components/schemas/Calendar-write'
        event:
          $ref: '#/components/schemas/Event-write'
    'Journal:jsonld-read':
      type: object
      description: 'A journal from an event.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        startDate:
          description: 'The moment this event starts'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        endDate:
          description: 'The moment this event ends'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        class:
          description: 'The security class of this event.'
          type: string
        created:
          description: 'The creation in datetime of this event.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        lastMod:
          description: 'The last modification of this event in datetime.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        organiser:
          description: 'The organiser of this event linked to with an url.'
          type: string
        status:
          description: 'The status of this evemt.'
          type: string
        summary:
          description: 'The summary of this event.'
          type: string
        transp:
          description: 'The determination if the event should block the duration of the event for participants.'
          type: string
        url:
          description: 'The url of this event.'
          type: string
        duration:
          description: 'The duration of this event.'
          type: integer
        seq:
          description: 'The version number of this event.'
          type: integer
        priority:
          description: 'The priority of this event ranging from 1 (high) to 9 (low).'
          type: integer
        attendees:
          description: 'The urls of the attendees of this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        attachments:
          readOnly: true
          description: 'The urls of the attachments of this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        categories:
          description: 'The urls of the catergories this event belongs to.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        comments:
          description: 'The urls of the comments that belong to this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        calendar:
          $ref: '#/components/schemas/Calendar:jsonld-read'
        event:
          $ref: '#/components/schemas/Event:jsonld-read'
      required:
        - name
        - startDate
        - endDate
        - class
        - created
        - lastMod
        - organiser
        - status
        - summary
        - transp
        - url
        - duration
        - seq
        - priority
    'Journal:jsonld-write':
      type: object
      description: 'A journal from an event.'
      required:
        - name
        - startDate
        - endDate
        - class
        - created
        - lastMod
        - organiser
        - status
        - summary
        - transp
        - url
        - duration
        - seq
        - priority
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        startDate:
          description: 'The moment this event starts'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        endDate:
          description: 'The moment this event ends'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        class:
          description: 'The security class of this event.'
          type: string
        created:
          description: 'The creation in datetime of this event.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        lastMod:
          description: 'The last modification of this event in datetime.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        organiser:
          description: 'The organiser of this event linked to with an url.'
          type: string
        status:
          description: 'The status of this evemt.'
          type: string
        summary:
          description: 'The summary of this event.'
          type: string
        transp:
          description: 'The determination if the event should block the duration of the event for participants.'
          type: string
        url:
          description: 'The url of this event.'
          type: string
        duration:
          description: 'The duration of this event.'
          type: integer
        seq:
          description: 'The version number of this event.'
          type: integer
        priority:
          description: 'The priority of this event ranging from 1 (high) to 9 (low).'
          type: integer
        attendees:
          description: 'The urls of the attendees of this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        attachments:
          readOnly: true
          description: 'The urls of the attachments of this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        categories:
          description: 'The urls of the catergories this event belongs to.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        comments:
          description: 'The urls of the comments that belong to this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        calendar:
          $ref: '#/components/schemas/Calendar:jsonld-write'
        event:
          $ref: '#/components/schemas/Event:jsonld-write'
    Resource-read:
      type: object
      description: 'Describes resources that can be needed for an event.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event-read'
        todos:
          type: array
          items:
            $ref: '#/components/schemas/Todo-read'
      required:
        - name
    Resource-write:
      type: object
      description: 'Describes resources that can be needed for an event.'
      required:
        - name
      properties:
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event-write'
        todos:
          type: array
          items:
            $ref: '#/components/schemas/Todo-write'
    'Resource:jsonld-read':
      type: object
      description: 'Describes resources that can be needed for an event.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event:jsonld-read'
        todos:
          type: array
          items:
            $ref: '#/components/schemas/Todo:jsonld-read'
      required:
        - name
    'Resource:jsonld-write':
      type: object
      description: 'Describes resources that can be needed for an event.'
      required:
        - name
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event:jsonld-write'
        todos:
          type: array
          items:
            $ref: '#/components/schemas/Todo:jsonld-write'
    Schedule-read:
      type: object
      description: 'A schedule defines a repeating time period used to describe a regularly occurring Event. At a minimum a schedule will specify repeatFrequency which describes the interval between occurences of the event. Additional information can be provided to specify the schedule more precisely. This includes identifying the day(s) of the week or month when the recurring event will take place, in addition to its start and end time. Schedules may also have start and end dates to indicate when they are active, e.g. to define a limited calendar of events.'
      externalDocs:
        url: 'http://schema.org/PostalAddress'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this Schedule'
          type: string
        description:
          description: 'An short description of this Schedule'
          type: string
        byDay:
          description: 'Defines the day(s) of the week on which a recurring Event takes place. Sunday is both 0 and 7.'
          type: integer
        byMonth:
          description: 'Defines the month(s) of the year on which a recurring Event takes place. Specified as an Integer between 1-12. January is 1.'
          type: integer
        byMonthDay:
          description: 'Defines the day(s) of the month on which a recurring Event takes place. Specified as an Integer between 1-31.'
          type: integer
        events:
          description: 'The that belong to or are coused by this Schedule'
          type: array
          items:
            $ref: '#/components/schemas/Event-read'
        exceptDates:
          description: 'Defines the day(s) of the month on which a recurring Event takes place. Specified as an Integer between 1-31.'
          type: array
          items:
            type: string
        repeatCount:
          description: 'Defines the number of times a recurring Event will take place'
          type: integer
        repeatFrequency:
          description: 'Defines the frequency at which Events will occur according to a schedule Schedule. The intervals between events should be defined as a [Duration](https://en.wikipedia.org/wiki/ISO_8601#Durations) of time.'
          type: string
        calendar:
          description: 'The Calendar to wich this Schedule belongs'
          $ref: '#/components/schemas/Calendar-read'
        freebusies:
          type: array
          items:
            $ref: '#/components/schemas/Freebusy-read'
        todos:
          type: array
          items:
            $ref: '#/components/schemas/Todo-read'
      required:
        - name
    Schedule-write:
      type: object
      description: 'A schedule defines a repeating time period used to describe a regularly occurring Event. At a minimum a schedule will specify repeatFrequency which describes the interval between occurences of the event. Additional information can be provided to specify the schedule more precisely. This includes identifying the day(s) of the week or month when the recurring event will take place, in addition to its start and end time. Schedules may also have start and end dates to indicate when they are active, e.g. to define a limited calendar of events.'
      externalDocs:
        url: 'http://schema.org/PostalAddress'
      required:
        - name
      properties:
        name:
          description: 'The name of this Schedule'
          type: string
        description:
          description: 'An short description of this Schedule'
          type: string
        byDay:
          description: 'Defines the day(s) of the week on which a recurring Event takes place. Sunday is both 0 and 7.'
          type: integer
        byMonth:
          description: 'Defines the month(s) of the year on which a recurring Event takes place. Specified as an Integer between 1-12. January is 1.'
          type: integer
        byMonthDay:
          description: 'Defines the day(s) of the month on which a recurring Event takes place. Specified as an Integer between 1-31.'
          type: integer
        events:
          description: 'The that belong to or are coused by this Schedule'
          type: array
          items:
            $ref: '#/components/schemas/Event-write'
        exceptDates:
          description: 'Defines the day(s) of the month on which a recurring Event takes place. Specified as an Integer between 1-31.'
          type: array
          items:
            type: string
        repeatCount:
          description: 'Defines the number of times a recurring Event will take place'
          type: integer
        repeatFrequency:
          description: 'Defines the frequency at which Events will occur according to a schedule Schedule. The intervals between events should be defined as a [Duration](https://en.wikipedia.org/wiki/ISO_8601#Durations) of time.'
          type: string
        calendar:
          description: 'The Calendar to wich this Schedule belongs'
          $ref: '#/components/schemas/Calendar-write'
        freebusies:
          type: array
          items:
            $ref: '#/components/schemas/Freebusy-write'
        todos:
          type: array
          items:
            $ref: '#/components/schemas/Todo-write'
    'Schedule:jsonld-read':
      type: object
      description: 'A schedule defines a repeating time period used to describe a regularly occurring Event. At a minimum a schedule will specify repeatFrequency which describes the interval between occurences of the event. Additional information can be provided to specify the schedule more precisely. This includes identifying the day(s) of the week or month when the recurring event will take place, in addition to its start and end time. Schedules may also have start and end dates to indicate when they are active, e.g. to define a limited calendar of events.'
      externalDocs:
        url: 'http://schema.org/PostalAddress'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this Schedule'
          type: string
        description:
          description: 'An short description of this Schedule'
          type: string
        byDay:
          description: 'Defines the day(s) of the week on which a recurring Event takes place. Sunday is both 0 and 7.'
          type: integer
        byMonth:
          description: 'Defines the month(s) of the year on which a recurring Event takes place. Specified as an Integer between 1-12. January is 1.'
          type: integer
        byMonthDay:
          description: 'Defines the day(s) of the month on which a recurring Event takes place. Specified as an Integer between 1-31.'
          type: integer
        events:
          description: 'The that belong to or are coused by this Schedule'
          type: array
          items:
            $ref: '#/components/schemas/Event:jsonld-read'
        exceptDates:
          description: 'Defines the day(s) of the month on which a recurring Event takes place. Specified as an Integer between 1-31.'
          type: array
          items:
            type: string
        repeatCount:
          description: 'Defines the number of times a recurring Event will take place'
          type: integer
        repeatFrequency:
          description: 'Defines the frequency at which Events will occur according to a schedule Schedule. The intervals between events should be defined as a [Duration](https://en.wikipedia.org/wiki/ISO_8601#Durations) of time.'
          type: string
        calendar:
          description: 'The Calendar to wich this Schedule belongs'
          $ref: '#/components/schemas/Calendar:jsonld-read'
        freebusies:
          type: array
          items:
            $ref: '#/components/schemas/Freebusy:jsonld-read'
        todos:
          type: array
          items:
            $ref: '#/components/schemas/Todo:jsonld-read'
      required:
        - name
    'Schedule:jsonld-write':
      type: object
      description: 'A schedule defines a repeating time period used to describe a regularly occurring Event. At a minimum a schedule will specify repeatFrequency which describes the interval between occurences of the event. Additional information can be provided to specify the schedule more precisely. This includes identifying the day(s) of the week or month when the recurring event will take place, in addition to its start and end time. Schedules may also have start and end dates to indicate when they are active, e.g. to define a limited calendar of events.'
      externalDocs:
        url: 'http://schema.org/PostalAddress'
      required:
        - name
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this Schedule'
          type: string
        description:
          description: 'An short description of this Schedule'
          type: string
        byDay:
          description: 'Defines the day(s) of the week on which a recurring Event takes place. Sunday is both 0 and 7.'
          type: integer
        byMonth:
          description: 'Defines the month(s) of the year on which a recurring Event takes place. Specified as an Integer between 1-12. January is 1.'
          type: integer
        byMonthDay:
          description: 'Defines the day(s) of the month on which a recurring Event takes place. Specified as an Integer between 1-31.'
          type: integer
        events:
          description: 'The that belong to or are coused by this Schedule'
          type: array
          items:
            $ref: '#/components/schemas/Event:jsonld-write'
        exceptDates:
          description: 'Defines the day(s) of the month on which a recurring Event takes place. Specified as an Integer between 1-31.'
          type: array
          items:
            type: string
        repeatCount:
          description: 'Defines the number of times a recurring Event will take place'
          type: integer
        repeatFrequency:
          description: 'Defines the frequency at which Events will occur according to a schedule Schedule. The intervals between events should be defined as a [Duration](https://en.wikipedia.org/wiki/ISO_8601#Durations) of time.'
          type: string
        calendar:
          description: 'The Calendar to wich this Schedule belongs'
          $ref: '#/components/schemas/Calendar:jsonld-write'
        freebusies:
          type: array
          items:
            $ref: '#/components/schemas/Freebusy:jsonld-write'
        todos:
          type: array
          items:
            $ref: '#/components/schemas/Todo:jsonld-write'
    Todo-read:
      type: object
      description: 'A to-do from an event.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        startDate:
          description: 'The moment this event starts'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        endDate:
          description: 'The moment this event ends'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        location:
          description: 'The location of this event'
          type: string
        class:
          description: 'The security class of this event.'
          type: string
        created:
          description: 'The creation in datetime of this event.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        geo:
          description: 'The coordinates of this event.'
          type: string
        lastMod:
          description: 'The last modification of this event in datetime.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        organiser:
          description: 'The organiser of this event linked to with an url.'
          type: string
        status:
          description: 'The status of this evemt.'
          type: string
        summary:
          description: 'The summary of this event.'
          type: string
        url:
          description: 'The url of this event.'
          type: string
        duration:
          description: 'The duration of this event.'
          type: integer
        contact:
          description: 'Url of this person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        seq:
          description: 'The version number of this event.'
          type: integer
        priority:
          description: 'The priority of this event ranging from 1 (high) to 9 (low).'
          type: integer
        attendees:
          description: 'The urls of the attendees of this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        attachments:
          readOnly: true
          description: 'The urls of the attachments of this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        categories:
          description: 'The urls of the catergories this event belongs to.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        comments:
          description: 'The urls of the comments that belong to this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        completed:
          description: 'The date and time a to-do is completed.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        percentageDone:
          description: 'The percentage of a to-do that has been comepleted.'
          type: integer
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource-read'
        alarm:
          $ref: '#/components/schemas/Alarm-read'
        calendar:
          $ref: '#/components/schemas/Calendar-read'
        schedule:
          $ref: '#/components/schemas/Schedule-read'
      required:
        - name
        - startDate
        - endDate
        - location
        - class
        - created
        - lastMod
        - organiser
        - status
        - summary
        - url
        - duration
        - contact
        - seq
        - priority
        - completed
        - percentageDone
    Todo-write:
      type: object
      description: 'A to-do from an event.'
      required:
        - name
        - startDate
        - endDate
        - location
        - class
        - created
        - lastMod
        - organiser
        - status
        - summary
        - url
        - duration
        - contact
        - seq
        - priority
        - completed
        - percentageDone
      properties:
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        startDate:
          description: 'The moment this event starts'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        endDate:
          description: 'The moment this event ends'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        location:
          description: 'The location of this event'
          type: string
        class:
          description: 'The security class of this event.'
          type: string
        created:
          description: 'The creation in datetime of this event.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        geo:
          description: 'The coordinates of this event.'
          type: string
        lastMod:
          description: 'The last modification of this event in datetime.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        organiser:
          description: 'The organiser of this event linked to with an url.'
          type: string
        status:
          description: 'The status of this evemt.'
          type: string
        summary:
          description: 'The summary of this event.'
          type: string
        url:
          description: 'The url of this event.'
          type: string
        duration:
          description: 'The duration of this event.'
          type: integer
        contact:
          description: 'Url of this person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        seq:
          description: 'The version number of this event.'
          type: integer
        priority:
          description: 'The priority of this event ranging from 1 (high) to 9 (low).'
          type: integer
        attendees:
          description: 'The urls of the attendees of this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        attachments:
          readOnly: true
          description: 'The urls of the attachments of this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        categories:
          description: 'The urls of the catergories this event belongs to.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        comments:
          description: 'The urls of the comments that belong to this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        completed:
          description: 'The date and time a to-do is completed.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        percentageDone:
          description: 'The percentage of a to-do that has been comepleted.'
          type: integer
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource-write'
        alarm:
          $ref: '#/components/schemas/Alarm-write'
        calendar:
          $ref: '#/components/schemas/Calendar-write'
        schedule:
          $ref: '#/components/schemas/Schedule-write'
    'Todo:jsonld-read':
      type: object
      description: 'A to-do from an event.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        startDate:
          description: 'The moment this event starts'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        endDate:
          description: 'The moment this event ends'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        location:
          description: 'The location of this event'
          type: string
        class:
          description: 'The security class of this event.'
          type: string
        created:
          description: 'The creation in datetime of this event.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        geo:
          description: 'The coordinates of this event.'
          type: string
        lastMod:
          description: 'The last modification of this event in datetime.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        organiser:
          description: 'The organiser of this event linked to with an url.'
          type: string
        status:
          description: 'The status of this evemt.'
          type: string
        summary:
          description: 'The summary of this event.'
          type: string
        url:
          description: 'The url of this event.'
          type: string
        duration:
          description: 'The duration of this event.'
          type: integer
        contact:
          description: 'Url of this person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        seq:
          description: 'The version number of this event.'
          type: integer
        priority:
          description: 'The priority of this event ranging from 1 (high) to 9 (low).'
          type: integer
        attendees:
          description: 'The urls of the attendees of this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        attachments:
          readOnly: true
          description: 'The urls of the attachments of this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        categories:
          description: 'The urls of the catergories this event belongs to.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        comments:
          description: 'The urls of the comments that belong to this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        completed:
          description: 'The date and time a to-do is completed.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        percentageDone:
          description: 'The percentage of a to-do that has been comepleted.'
          type: integer
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource:jsonld-read'
        alarm:
          $ref: '#/components/schemas/Alarm:jsonld-read'
        calendar:
          $ref: '#/components/schemas/Calendar:jsonld-read'
        schedule:
          $ref: '#/components/schemas/Schedule:jsonld-read'
      required:
        - name
        - startDate
        - endDate
        - location
        - class
        - created
        - lastMod
        - organiser
        - status
        - summary
        - url
        - duration
        - contact
        - seq
        - priority
        - completed
        - percentageDone
    'Todo:jsonld-write':
      type: object
      description: 'A to-do from an event.'
      required:
        - name
        - startDate
        - endDate
        - location
        - class
        - created
        - lastMod
        - organiser
        - status
        - summary
        - url
        - duration
        - contact
        - seq
        - priority
        - completed
        - percentageDone
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        startDate:
          description: 'The moment this event starts'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        endDate:
          description: 'The moment this event ends'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        location:
          description: 'The location of this event'
          type: string
        class:
          description: 'The security class of this event.'
          type: string
        created:
          description: 'The creation in datetime of this event.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        geo:
          description: 'The coordinates of this event.'
          type: string
        lastMod:
          description: 'The last modification of this event in datetime.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        organiser:
          description: 'The organiser of this event linked to with an url.'
          type: string
        status:
          description: 'The status of this evemt.'
          type: string
        summary:
          description: 'The summary of this event.'
          type: string
        url:
          description: 'The url of this event.'
          type: string
        duration:
          description: 'The duration of this event.'
          type: integer
        contact:
          description: 'Url of this person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        seq:
          description: 'The version number of this event.'
          type: integer
        priority:
          description: 'The priority of this event ranging from 1 (high) to 9 (low).'
          type: integer
        attendees:
          description: 'The urls of the attendees of this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        attachments:
          readOnly: true
          description: 'The urls of the attachments of this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        categories:
          description: 'The urls of the catergories this event belongs to.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        comments:
          description: 'The urls of the comments that belong to this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: array
          items:
            type: string
        completed:
          description: 'The date and time a to-do is completed.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        percentageDone:
          description: 'The percentage of a to-do that has been comepleted.'
          type: integer
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource:jsonld-write'
        alarm:
          $ref: '#/components/schemas/Alarm:jsonld-write'
        calendar:
          $ref: '#/components/schemas/Calendar:jsonld-write'
        schedule:
          $ref: '#/components/schemas/Schedule:jsonld-write'
  securitySchemes:
    apiKey:
      type: apiKey
      in: header
      description: 'Value for the Authorization header'
      name: Authorization
definitions:
  Alarm-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        example: 'My RequestType'
        maxLength: 255
      description:
        example: 'This is the best Event ever'
        maxLength: 2550
      summary:
        example: 'This is the best event ever.'
        maxLength: 255
      action:
        example: AUDIO
        maxLength: 255
      trigger:
        example: '30'
      duration:
        example: '60'
      repeat:
        example: '4'
      event: []
      todo: []
    required:
      - name
      - action
      - trigger
      - duration
      - repeat
  Alarm-write:
    properties:
      name:
        example: 'My RequestType'
        maxLength: 255
      description:
        example: 'This is the best Event ever'
        maxLength: 2550
      summary:
        example: 'This is the best event ever.'
        maxLength: 255
      action:
        example: AUDIO
        maxLength: 255
      trigger:
        example: '30'
      duration:
        example: '60'
      repeat:
        example: '4'
      event: []
      todo: []
    required:
      - name
      - action
      - trigger
      - duration
      - repeat
  Calendar-read:
    properties:
      id:
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        example: 'My Calendar'
        maxLength: 255
      description:
        example: 'This is the best Calendar ever'
        maxLength: 2550
      timeZone:
        example: CET
        maxLength: 5
        minLength: 3
      events: []
      schedules: []
      freebusies: []
      journals: []
      todos: []
    required:
      - name
      - timeZone
  Calendar-write:
    properties:
      name:
        example: 'My Calendar'
        maxLength: 255
      description:
        example: 'This is the best Calendar ever'
        maxLength: 2550
      timeZone:
        example: CET
        maxLength: 5
        minLength: 3
      events: []
      schedules: []
      freebusies: []
      journals: []
      todos: []
    required:
      - name
      - timeZone
  Event-read:
    properties:
      id:
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        example: 'My RequestType'
        maxLength: 255
      description:
        example: 'This is the best Event ever'
        maxLength: 2550
      startDate:
        example: '30-11-2019 15:00:00'
      endDate:
        example: '3-11-2019 20:00:00'
      location:
        example: 'Dam 1, Amsterdam'
        maxLength: 255
      class:
        example: PUBLIC
        maxLength: 255
      created:
        example: '16-12-2019 15:08:26'
      geo:
        example: '81.15147,10.36374,42.26'
        maxLength: 255
      lastMod:
        example: '16-12-2019 15:14:34'
      organiser:
        example: conduction.nl
        maxLength: 255
      status:
        example: Confirmed
        maxLength: 255
      summary:
        example: 'This is the best event ever.'
        maxLength: 255
      transp:
        example: Transparent
        maxLength: 255
      url:
        example: conduction.nl
        maxLength: 255
      duration:
        example: '2'
      contact:
        example: 'https://con.example.org'
        format: url
      seq:
        example: '1.0'
      priority:
        example: '1'
      attendees:
        example: 'https://con.example.com, https://con.example2.com'
        format: url
      attachments:
        example: 'https://example.org, https://example2.org'
        format: url
      categories:
        example: 'https://con.example.com, https://con.example2.com'
        format: url
      comments:
        example: 'https://con.example.com, https://con.example2.com'
        format: url
      schedule: []
      calendar: []
      related: []
      resources: []
      alarms: []
      journal: []
    required:
      - name
      - startDate
      - endDate
      - contact
  Event-write:
    properties:
      name:
        example: 'My RequestType'
        maxLength: 255
      description:
        example: 'This is the best Event ever'
        maxLength: 2550
      startDate:
        example: '30-11-2019 15:00:00'
      endDate:
        example: '3-11-2019 20:00:00'
      location:
        example: 'Dam 1, Amsterdam'
        maxLength: 255
      class:
        example: PUBLIC
        maxLength: 255
      created:
        example: '16-12-2019 15:08:26'
      geo:
        example: '81.15147,10.36374,42.26'
        maxLength: 255
      lastMod:
        example: '16-12-2019 15:14:34'
      organiser:
        example: conduction.nl
        maxLength: 255
      status:
        example: Confirmed
        maxLength: 255
      summary:
        example: 'This is the best event ever.'
        maxLength: 255
      transp:
        example: Transparent
        maxLength: 255
      url:
        example: conduction.nl
        maxLength: 255
      duration:
        example: '2'
      contact:
        example: 'https://con.example.org'
        format: url
      seq:
        example: '1.0'
      priority:
        example: '1'
      attendees:
        example: 'https://con.example.com, https://con.example2.com'
        format: url
      attachments:
        example: 'https://example.org, https://example2.org'
        format: url
      categories:
        example: 'https://con.example.com, https://con.example2.com'
        format: url
      comments:
        example: 'https://con.example.com, https://con.example2.com'
        format: url
      schedule: []
      calendar: []
      related: []
      resources: []
      alarms: []
      journal: []
    required:
      - name
      - startDate
      - endDate
      - contact
  Freebusy-read:
    properties:
      url:
        example: conduction.nl
        format: uuid
        maxLength: 255
      description:
        example: 'This is the best Event ever'
        maxLength: 2550
      attendee:
        example: 'https://con.example.com'
        format: url
        maxLength: 255
      comments:
        example: 'https://con.example.com, https://con.example2.com'
        format: url
      contact:
        example: 'https://con.example.org'
        format: url
      startDate:
        example: '30-11-2019 15:00:00'
      endDate:
        example: '3-11-2019 20:00:00'
      duration:
        example: '2'
      organiser:
        example: conduction.nl
        maxLength: 255
      freebusy:
        example: FREE
      calendar: []
      schedule: []
    required:
      - url
      - attendee
      - contact
      - startDate
      - endDate
      - freebusy
  Freebusy-write:
    properties:
      description:
        example: 'This is the best Event ever'
        maxLength: 2550
      attendee:
        example: 'https://con.example.com'
        format: url
        maxLength: 255
      comments:
        example: 'https://con.example.com, https://con.example2.com'
        format: url
      contact:
        example: 'https://con.example.org'
        format: url
      startDate:
        example: '30-11-2019 15:00:00'
      endDate:
        example: '3-11-2019 20:00:00'
      duration:
        example: '2'
      organiser:
        example: conduction.nl
        maxLength: 255
      freebusy:
        example: FREE
      calendar: []
      schedule: []
    required:
      - url
      - attendee
      - contact
      - startDate
      - endDate
      - freebusy
  Journal-read:
    properties:
      id:
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        example: 'My RequestType'
        maxLength: 255
      description:
        example: 'This is the best Event ever'
        maxLength: 2550
      startDate:
        example: '30-11-2019 15:00:00'
      endDate:
        example: '3-11-2019 20:00:00'
      class:
        example: PUBLIC
        maxLength: 255
      created:
        example: '16-12-2019 15:08:26'
      lastMod:
        example: '16-12-2019 15:14:34'
      organiser:
        example: conduction.nl
        maxLength: 255
      status:
        example: Confirmed
        maxLength: 255
      summary:
        example: 'This is the best event ever.'
        maxLength: 255
      transp:
        example: Transparent
        maxLength: 255
      url:
        example: conduction.nl
        maxLength: 255
      duration:
        example: '2'
      seq:
        example: '1.0'
      priority:
        example: '1'
      attendees:
        example: 'https://con.example.com, https://con.example2.com'
        format: url
      attachments:
        example: 'https://example.org, https://example2.org'
        format: url
      categories:
        example: 'https://con.example.com, https://con.example2.com'
        format: url
      comments:
        example: 'https://con.example.com, https://con.example2.com'
        format: url
      calendar: []
      event: []
    required:
      - name
      - startDate
      - endDate
  Journal-write:
    properties:
      name:
        example: 'My RequestType'
        maxLength: 255
      description:
        example: 'This is the best Event ever'
        maxLength: 2550
      startDate:
        example: '30-11-2019 15:00:00'
      endDate:
        example: '3-11-2019 20:00:00'
      class:
        example: PUBLIC
        maxLength: 255
      created:
        example: '16-12-2019 15:08:26'
      lastMod:
        example: '16-12-2019 15:14:34'
      organiser:
        example: conduction.nl
        maxLength: 255
      status:
        example: Confirmed
        maxLength: 255
      summary:
        example: 'This is the best event ever.'
        maxLength: 255
      transp:
        example: Transparent
        maxLength: 255
      url:
        example: conduction.nl
        maxLength: 255
      duration:
        example: '2'
      seq:
        example: '1.0'
      priority:
        example: '1'
      attendees:
        example: 'https://con.example.com, https://con.example2.com'
        format: url
      attachments:
        example: 'https://example.org, https://example2.org'
        format: url
      categories:
        example: 'https://con.example.com, https://con.example2.com'
        format: url
      comments:
        example: 'https://con.example.com, https://con.example2.com'
        format: url
      calendar: []
      event: []
    required:
      - name
      - startDate
      - endDate
  Resource-read:
    properties:
      id:
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        example: 'My RequestType'
        maxLength: 255
      description:
        example: 'This is the best Event ever'
        maxLength: 2550
      events: []
      todos: []
    required:
      - name
  Resource-write:
    properties:
      name:
        example: 'My RequestType'
        maxLength: 255
      description:
        example: 'This is the best Event ever'
        maxLength: 2550
      events: []
      todos: []
    required:
      - name
  Schedule-read:
    properties:
      id:
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        example: 'My Schedule'
        maxLength: 255
      description:
        example: 'This is the best Schedule ever'
        maxLength: 2550
      byDay:
        example: '1'
      byMonth:
        example: '1'
      byMonthDay:
        example: '1'
      exceptDates:
        example: '30'
      repeatCount:
        example: '10'
      repeatFrequency:
        example: PT1M
        maxLength: 255
      events: []
      calendar: []
      freebusies: []
      todos: []
    required:
      - name
  Schedule-write:
    properties:
      name:
        example: 'My Schedule'
        maxLength: 255
      description:
        example: 'This is the best Schedule ever'
        maxLength: 2550
      byDay:
        example: '1'
      byMonth:
        example: '1'
      byMonthDay:
        example: '1'
      exceptDates:
        example: '30'
      repeatCount:
        example: '10'
      repeatFrequency:
        example: PT1M
        maxLength: 255
      events: []
      calendar: []
      freebusies: []
      todos: []
    required:
      - name
  Todo-read:
    properties:
      id:
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        example: 'My RequestType'
        maxLength: 255
      description:
        example: 'This is the best Event ever'
        maxLength: 2550
      startDate:
        example: '30-11-2019 15:00:00'
      endDate:
        example: '3-11-2019 20:00:00'
      location:
        example: 'Dam 1, Amsterdam'
        maxLength: 255
      class:
        example: PUBLIC
        maxLength: 255
      created:
        example: '16-12-2019 15:08:26'
      geo:
        example: '81.15147,10.36374,42.26'
        maxLength: 255
      lastMod:
        example: '16-12-2019 15:14:34'
      organiser:
        example: conduction.nl
        maxLength: 255
      status:
        example: Confirmed
        maxLength: 255
      summary:
        example: 'This is the best event ever.'
        maxLength: 255
      url:
        example: conduction.nl
        maxLength: 255
      duration:
        example: '2'
      contact:
        example: 'https://con.example.org'
        format: url
      seq:
        example: '1.0'
      priority:
        example: '1'
      attendees:
        example: 'https://con.example.com, https://con.example2.com'
        format: url
      attachments:
        example: 'https://example.org, https://example2.org'
        format: url
      categories:
        example: 'https://con.example.com, https://con.example2.com'
        format: url
      comments:
        example: 'https://con.example.com, https://con.example2.com'
        format: url
      completed:
        example: '10-12-2019 15:00:00'
      percentageDone:
        example: 40%
      resources: []
      alarm: []
      calendar: []
      schedule: []
    required:
      - name
      - startDate
      - endDate
      - contact
      - completed
      - percentageDone
  Todo-write:
    properties:
      name:
        example: 'My RequestType'
        maxLength: 255
      description:
        example: 'This is the best Event ever'
        maxLength: 2550
      startDate:
        example: '30-11-2019 15:00:00'
      endDate:
        example: '3-11-2019 20:00:00'
      location:
        example: 'Dam 1, Amsterdam'
        maxLength: 255
      class:
        example: PUBLIC
        maxLength: 255
      created:
        example: '16-12-2019 15:08:26'
      geo:
        example: '81.15147,10.36374,42.26'
        maxLength: 255
      lastMod:
        example: '16-12-2019 15:14:34'
      organiser:
        example: conduction.nl
        maxLength: 255
      status:
        example: Confirmed
        maxLength: 255
      summary:
        example: 'This is the best event ever.'
        maxLength: 255
      url:
        example: conduction.nl
        maxLength: 255
      duration:
        example: '2'
      contact:
        example: 'https://con.example.org'
        format: url
      seq:
        example: '1.0'
      priority:
        example: '1'
      attendees:
        example: 'https://con.example.com, https://con.example2.com'
        format: url
      attachments:
        example: 'https://example.org, https://example2.org'
        format: url
      categories:
        example: 'https://con.example.com, https://con.example2.com'
        format: url
      comments:
        example: 'https://con.example.com, https://con.example2.com'
        format: url
      completed:
        example: '10-12-2019 15:00:00'
      percentageDone:
        example: 40%
      resources: []
      alarm: []
      calendar: []
      schedule: []
    required:
      - name
      - startDate
      - endDate
      - contact
      - completed
      - percentageDone
tags:
  -
    name: Alarm
    description: |
      Used to describe alarms for Events and Todos.
      
      
  -
    name: Calendar
    description: |
      A Calendar is a collection of events tied to an unque person or resource.
      
      
  -
    name: Event
    description: |
      An event happening at a certain time and location, such as a concert, lecture, meeting or festival.
      
      
  -
    name: Freebusy
    description: |
      This entity checks if a person is free or busy for a event.
      
      
  -
    name: Journal
    description: |
      A journal from an event.
      
      
  -
    name: Resource
    description: |
      Describes resources that can be needed for an event.
      
      
  -
    name: Schedule
    description: |
      A schedule defines a repeating time period used to describe a regularly occurring Event. At a minimum a schedule will specify repeatFrequency which describes the interval between occurences of the event. Additional information can be provided to specify the schedule more precisely. This includes identifying the day(s) of the week or month when the recurring event will take place, in addition to its start and end time. Schedules may also have start and end dates to indicate when they are active, e.g. to define a limited calendar of events.
      
      
  -
    name: Todo
    description: |
      A to-do from an event.
      
      
securityDefinitions:
  JWT-Oauth:
    type: oauth2
    authorizationUrl: 'http://petstore.swagger.io/api/oauth/dialog'
    flow: implicit
    scopes:
      read: 'read right to the Todo resource'
      write: 'write right to the Todo resource'
  JWT-Token:
    type: apiKey
    in: header
    name: Authorization
    scopes:
      read: 'read right to the Todo resource'
      write: 'write right to the Todo resource'
host: irc.zaakonline.nl
servers:
  -
    description: 'Demo Omgeving'
    url: 'http://proto.demo.common-ground.dev'
externalDocs:
  -
    description: 'OAS Documentatie'
    url: 'http://proto.demo.common-ground.dev'
x-commonground:
  type: service
  developers:
    -
      name: Conduction
      url: 'https://github.com/ConductionNL'
      email: info@conduction.nl
    -
      name: 'Gemeente ''s-Hertogenbosch'
      url: 'https://github.com/gemeenteshertogenbosch'
      email: info@s-hertogenbosch.nl/
    -
      name: 'Gemeente Utrecht'
      url: 'https://github.com/GemeenteUtrecht'
      email: info@utrecht.nl
  builds:
    -
      name: travis
      logo: 'https://travis-ci.org/api-platform/core.svg?branch=master'
      url: 'https://travis-ci.org/api-platform/core'
    -
      name: appveyor
      logo: 'https://ci.appveyor.com/api/projects/status/grwuyprts3wdqx5l?svg=true'
      url: 'https://ci.appveyor.com/project/dunglas/dunglasapibundle'
    -
      name: codecov
      logo: 'https://codecov.io/gh/api-platform/core/branch/master/graph/badge.svg'
      url: 'https://codecov.io/gh/api-platform/core'
    -
      name: SensioLabsInsight
      logo: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93/mini.png'
      url: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93'
    -
      name: 'Scrutinizer Code Quality'
      logo: 'https://scrutinizer-ci.com/g/api-platform/core/badges/quality-score.png?b=master'
      url: 'https://scrutinizer-ci.com/g/api-platform/core/?branch=master'
