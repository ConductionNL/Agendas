openapi: 3.0.2
info:
  title: 'Agenda Component'
  version: V.0.1
  description: |
    API Details
    - Component: Agenda Component
    - Reference: arc
    - Enviroment: dev
    - Version: V.0.1
    - Repository: [online](https://github.com/ConductionNL/agendaservice) / [zip](https://github.com/ConductionNL/agendaservice/archive/master.zip)
    - Docker Image: [online](https://hub.docker.com/repository/docker/conduction/arc-php) 
    - Datamodel: [postman](/schema/arc.postman_collection.json) / [oas](/schema/openapi.yaml) / [pdf](/schema/datamodel.pdf) / [mwb](/schema/datamodel.mwb) 
    
    'Naast deze JSON rest API is er ook een [graphql](/graphql) interface beschikbaar.'         
    
paths:
  /alarms:
    get:
      tags:
        - Alarm
      operationId: getAlarmCollection
      summary: 'Retrieves the collection of Alarm resources.'
      responses:
        200:
          description: 'Alarm collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Alarm:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Alarm:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alarm-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alarm-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alarm-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alarm-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alarm-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alarm-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alarm-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alarm-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alarm-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alarm-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alarm-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[summary]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[action]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[trigger]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[duration]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[repeat]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: 'description[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: summary
          in: query
          required: false
          schema:
            type: string
        -
          name: 'summary[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: action
          in: query
          required: false
          schema:
            type: string
        -
          name: 'action[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: trigger
          in: query
          required: false
          schema:
            type: string
        -
          name: 'trigger[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: duration
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'duration[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: repeat
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'repeat[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Alarm
      operationId: postAlarmCollection
      summary: 'Creates a Alarm resource.'
      responses:
        201:
          description: 'Alarm resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Alarm:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Alarm:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Alarm-read'
          links:
            GetAlarmItem:
              parameters:
                id: '$response.body#/id'
              operationId: getAlarmItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /alarms/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Alarm:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Alarm:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Alarm-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Alarm-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Alarm-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Alarm-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Alarm-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Alarm-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Alarm-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Alarm-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Alarm-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Alarm-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Alarm-write'
        description: 'The new Alarm resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/alarms/{id}':
    get:
      tags:
        - Alarm
      operationId: getAlarmItem
      summary: 'Retrieves a Alarm resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Alarm resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Alarm:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Alarm:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Alarm-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Alarm
      operationId: putAlarmItem
      summary: 'Replaces the Alarm resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Alarm resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Alarm:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Alarm:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Alarm-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Alarm:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Alarm:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Alarm-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Alarm-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Alarm-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Alarm-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Alarm-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Alarm-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Alarm-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Alarm-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Alarm-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Alarm-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Alarm-write'
        description: 'The updated Alarm resource'
    delete:
      tags:
        - Alarm
      operationId: deleteAlarmItem
      summary: 'Removes the Alarm resource.'
      responses:
        204:
          description: 'Alarm resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/alarms/{id}/audit_trail':
    get:
      tags:
        - Alarm
      operationId: get_audit_trailAlarmItem
      summary: 'Retrieves a Alarm resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Alarm resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Alarm:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Alarm:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Alarm-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/alarms/{id}/change_log':
    get:
      tags:
        - Alarm
      operationId: get_change_logsAlarmItem
      summary: 'Retrieves a Alarm resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Alarm resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Alarm:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Alarm:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Alarm-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Alarm-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /audit_trails:
    get:
      tags:
        - AuditTrail
      operationId: getAuditTrailCollection
      summary: 'Retrieves the collection of AuditTrail resources.'
      responses:
        200:
          description: 'AuditTrail collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
      parameters:
        -
          name: 'order[application]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[request]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[user]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[subject]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[resource]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[resourceType]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[endpoint]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[contentType]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[content]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[session]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: request
          in: query
          required: false
          schema:
            type: string
        -
          name: 'request[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: user
          in: query
          required: false
          schema:
            type: string
        -
          name: 'user[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: subject
          in: query
          required: false
          schema:
            type: string
        -
          name: 'subject[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: resource
          in: query
          required: false
          schema:
            type: string
        -
          name: 'resource[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: resourceType
          in: query
          required: false
          schema:
            type: string
        -
          name: endpoint
          in: query
          required: false
          schema:
            type: string
        -
          name: 'endpoint[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: contentType
          in: query
          required: false
          schema:
            type: string
        -
          name: 'contentType[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: content
          in: query
          required: false
          schema:
            type: string
        -
          name: 'content[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: session
          in: query
          required: false
          schema:
            type: string
        -
          name: 'session[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - AuditTrail
      operationId: postAuditTrailCollection
      summary: 'Creates a AuditTrail resource.'
      responses:
        201:
          description: 'AuditTrail resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
          links:
            GetAuditTrailItem:
              parameters:
                id: '$response.body#/id'
              operationId: getAuditTrailItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The new AuditTrail resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/audit_trails/{id}':
    get:
      tags:
        - AuditTrail
      operationId: getAuditTrailItem
      summary: 'Retrieves a AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'AuditTrail resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - AuditTrail
      operationId: deleteAuditTrailItem
      summary: 'Removes the AuditTrail resource.'
      responses:
        204:
          description: 'AuditTrail resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - AuditTrail
      operationId: putAuditTrailItem
      summary: 'Replaces the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The updated AuditTrail resource'
    patch:
      tags:
        - AuditTrail
      operationId: patchAuditTrailItem
      summary: 'Updates the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The updated AuditTrail resource'
  /calendars:
    get:
      tags:
        - Calendar
      operationId: getCalendarCollection
      summary: 'Retrieves the collection of Calendar resources.'
      responses:
        200:
          description: 'Calendar collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Calendar:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Calendar:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Calendar-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Calendar-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Calendar-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Calendar-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Calendar-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Calendar-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Calendar-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Calendar-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Calendar-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Calendar-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Calendar-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[timeZone]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: 'description[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: timeZone
          in: query
          required: false
          schema:
            type: string
        -
          name: 'timeZone[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Calendar
      operationId: postCalendarCollection
      summary: 'Creates a Calendar resource.'
      responses:
        201:
          description: 'Calendar resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Calendar:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Calendar:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Calendar-read'
          links:
            GetCalendarItem:
              parameters:
                id: '$response.body#/id'
              operationId: getCalendarItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /calendars/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Calendar:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Calendar:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Calendar-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Calendar-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Calendar-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Calendar-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Calendar-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Calendar-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Calendar-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Calendar-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Calendar-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Calendar-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Calendar-write'
        description: 'The new Calendar resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/calendars/{id}':
    get:
      tags:
        - Calendar
      operationId: getCalendarItem
      summary: 'Retrieves a Calendar resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Calendar resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Calendar:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Calendar:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Calendar-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Calendar
      operationId: putCalendarItem
      summary: 'Replaces the Calendar resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Calendar resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Calendar:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Calendar:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Calendar-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Calendar:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Calendar:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Calendar-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Calendar-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Calendar-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Calendar-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Calendar-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Calendar-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Calendar-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Calendar-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Calendar-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Calendar-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Calendar-write'
        description: 'The updated Calendar resource'
    delete:
      tags:
        - Calendar
      operationId: deleteCalendarItem
      summary: 'Removes the Calendar resource.'
      responses:
        204:
          description: 'Calendar resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/calendars/{id}/audit_trail':
    get:
      tags:
        - Calendar
      operationId: get_audit_trailCalendarItem
      summary: 'Retrieves a Calendar resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Calendar resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Calendar:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Calendar:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Calendar-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/calendars/{id}/change_log':
    get:
      tags:
        - Calendar
      operationId: get_change_logsCalendarItem
      summary: 'Retrieves a Calendar resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Calendar resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Calendar:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Calendar:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Calendar-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Calendar-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /change_logs:
    get:
      tags:
        - ChangeLog
      operationId: getChangeLogCollection
      summary: 'Retrieves the collection of ChangeLog resources.'
      responses:
        200:
          description: 'ChangeLog collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
      parameters:
        -
          name: 'order[action]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[objectId]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[objectClass]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[version]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[username]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: action
          in: query
          required: false
          schema:
            type: string
        -
          name: 'action[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: objectId
          in: query
          required: false
          schema:
            type: string
        -
          name: 'objectId[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: objectClass
          in: query
          required: false
          schema:
            type: string
        -
          name: 'objectClass[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: version
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'version[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - ChangeLog
      operationId: postChangeLogCollection
      summary: 'Creates a ChangeLog resource.'
      responses:
        201:
          description: 'ChangeLog resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
          links:
            GetChangeLogItem:
              parameters:
                id: '$response.body#/id'
              operationId: getChangeLogItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /change_logs/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The new ChangeLog resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/change_logs/{id}':
    get:
      tags:
        - ChangeLog
      operationId: getChangeLogItem
      summary: 'Retrieves a ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'ChangeLog resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - ChangeLog
      operationId: deleteChangeLogItem
      summary: 'Removes the ChangeLog resource.'
      responses:
        204:
          description: 'ChangeLog resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - ChangeLog
      operationId: putChangeLogItem
      summary: 'Replaces the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The updated ChangeLog resource'
    patch:
      tags:
        - ChangeLog
      operationId: patchChangeLogItem
      summary: 'Updates the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The updated ChangeLog resource'
  /events:
    get:
      tags:
        - Event
      operationId: getEventCollection
      summary: 'Retrieves the collection of Event resources.'
      responses:
        200:
          description: 'Event collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Event:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Event:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[startDate]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[endDate]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[location]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[class]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[geo]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[organizer]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[status]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[summary]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[transp]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[duration]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[contact]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[seq]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[priority]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[attendees]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[attachments]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[categories]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[comments]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'startDate[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'startDate[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'startDate[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'startDate[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'endDate[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'endDate[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'endDate[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'endDate[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: 'description[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: startDate
          in: query
          required: false
          schema:
            type: string
        -
          name: 'startDate[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: endDate
          in: query
          required: false
          schema:
            type: string
        -
          name: 'endDate[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: location
          in: query
          required: false
          schema:
            type: string
        -
          name: 'location[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: class
          in: query
          required: false
          schema:
            type: string
        -
          name: 'class[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: geo
          in: query
          required: false
          schema:
            type: string
        -
          name: 'geo[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: organizer
          in: query
          required: false
          schema:
            type: string
        -
          name: 'organizer[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: status
          in: query
          required: false
          schema:
            type: string
        -
          name: 'status[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: summary
          in: query
          required: false
          schema:
            type: string
        -
          name: 'summary[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: transp
          in: query
          required: false
          schema:
            type: string
        -
          name: 'transp[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: duration
          in: query
          required: false
          schema:
            type: string
        -
          name: 'duration[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: contact
          in: query
          required: false
          schema:
            type: string
        -
          name: 'contact[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: seq
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'seq[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: priority
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'priority[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: attendees
          in: query
          required: false
          schema:
            type: string
        -
          name: 'attendees[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: deepObject
          explode: true
        -
          name: attachments
          in: query
          required: false
          schema:
            type: string
        -
          name: 'attachments[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: deepObject
          explode: true
        -
          name: categories
          in: query
          required: false
          schema:
            type: string
        -
          name: 'categories[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: deepObject
          explode: true
        -
          name: comments
          in: query
          required: false
          schema:
            type: string
        -
          name: 'comments[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: deepObject
          explode: true
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Event
      operationId: postEventCollection
      summary: 'Creates a Event resource.'
      responses:
        201:
          description: 'Event resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Event:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Event:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Event-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Event-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Event-read'
          links:
            GetEventItem:
              parameters:
                id: '$response.body#/id'
              operationId: getEventItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /events/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Event:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Event:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Event-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Event-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Event-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Event-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Event-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Event-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Event-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Event-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Event-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Event-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Event-write'
        description: 'The new Event resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/events/{id}':
    get:
      tags:
        - Event
      operationId: getEventItem
      summary: 'Retrieves a Event resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Event resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Event:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Event:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Event-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Event-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Event-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Event
      operationId: putEventItem
      summary: 'Replaces the Event resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Event resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Event:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Event:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Event-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Event-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Event-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Event:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Event:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Event-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Event-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Event-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Event-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Event-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Event-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Event-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Event-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Event-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Event-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Event-write'
        description: 'The updated Event resource'
    delete:
      tags:
        - Event
      operationId: deleteEventItem
      summary: 'Removes the Event resource.'
      responses:
        204:
          description: 'Event resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/events/{id}/audit_trail':
    get:
      tags:
        - Event
      operationId: get_audit_trailEventItem
      summary: 'Retrieves a Event resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Event resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Event:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Event:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Event-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Event-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Event-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/events/{id}/change_log':
    get:
      tags:
        - Event
      operationId: get_change_logsEventItem
      summary: 'Retrieves a Event resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Event resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Event:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Event:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Event-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Event-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Event-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Event-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /freebusies:
    get:
      tags:
        - Freebusy
      operationId: getFreebusyCollection
      summary: 'Retrieves the collection of Freebusy resources.'
      responses:
        200:
          description: 'Freebusy collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Freebusy:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Freebusy:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Freebusy-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Freebusy-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Freebusy-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Freebusy-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Freebusy-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Freebusy-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Freebusy-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Freebusy-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Freebusy-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Freebusy-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Freebusy-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[attendee]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[comments]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[contact]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[startDate]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[endDate]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[duration]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[organiser]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[freebusy]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'startDate[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'startDate[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'startDate[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'startDate[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'endDate[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'endDate[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'endDate[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'endDate[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: 'description[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: attendee
          in: query
          required: false
          schema:
            type: string
        -
          name: 'attendee[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: comments
          in: query
          required: false
          schema:
            type: string
        -
          name: 'comments[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: deepObject
          explode: true
        -
          name: contact
          in: query
          required: false
          schema:
            type: string
        -
          name: 'contact[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: startDate
          in: query
          required: false
          schema:
            type: string
        -
          name: 'startDate[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: endDate
          in: query
          required: false
          schema:
            type: string
        -
          name: 'endDate[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: duration
          in: query
          required: false
          schema:
            type: string
        -
          name: 'duration[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: organiser
          in: query
          required: false
          schema:
            type: string
        -
          name: 'organiser[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: freebusy
          in: query
          required: false
          schema:
            type: string
        -
          name: 'freebusy[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Freebusy
      operationId: postFreebusyCollection
      summary: 'Creates a Freebusy resource.'
      responses:
        201:
          description: 'Freebusy resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Freebusy:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Freebusy:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
          links:
            GetFreebusyItem:
              parameters:
                id: '$response.body#/id'
              operationId: getFreebusyItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /freebusies/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Freebusy:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Freebusy:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Freebusy-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Freebusy-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Freebusy-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Freebusy-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Freebusy-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Freebusy-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Freebusy-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Freebusy-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Freebusy-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Freebusy-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Freebusy-write'
        description: 'The new Freebusy resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/freebusies/{id}':
    get:
      tags:
        - Freebusy
      operationId: getFreebusyItem
      summary: 'Retrieves a Freebusy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Freebusy resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Freebusy:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Freebusy:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Freebusy
      operationId: putFreebusyItem
      summary: 'Replaces the Freebusy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Freebusy resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Freebusy:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Freebusy:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Freebusy:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Freebusy:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Freebusy-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Freebusy-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Freebusy-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Freebusy-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Freebusy-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Freebusy-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Freebusy-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Freebusy-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Freebusy-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Freebusy-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Freebusy-write'
        description: 'The updated Freebusy resource'
    delete:
      tags:
        - Freebusy
      operationId: deleteFreebusyItem
      summary: 'Removes the Freebusy resource.'
      responses:
        204:
          description: 'Freebusy resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/freebusy/{id}/audit_trail':
    get:
      tags:
        - Freebusy
      operationId: get_audit_trailFreebusyItem
      summary: 'Retrieves a Freebusy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Freebusy resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Freebusy:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Freebusy:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/freebusy/{id}/change_log':
    get:
      tags:
        - Freebusy
      operationId: get_change_logsFreebusyItem
      summary: 'Retrieves a Freebusy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Freebusy resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Freebusy:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Freebusy:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Freebusy-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /journals:
    get:
      tags:
        - Journal
      operationId: getJournalCollection
      summary: 'Retrieves the collection of Journal resources.'
      responses:
        200:
          description: 'Journal collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Journal:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Journal:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Journal-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Journal-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Journal-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Journal-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Journal-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Journal-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Journal-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Journal-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Journal-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Journal-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Journal-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[startDate]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[endDate]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[class]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[organiser]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[status]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[summary]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[transp]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[duration]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[seq]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[priority]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[attendees]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[attachments]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[categories]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[comments]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'startDate[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'startDate[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'startDate[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'startDate[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'endDate[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'endDate[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'endDate[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'endDate[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: 'description[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: startDate
          in: query
          required: false
          schema:
            type: string
        -
          name: 'startDate[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: endDate
          in: query
          required: false
          schema:
            type: string
        -
          name: 'endDate[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: class
          in: query
          required: false
          schema:
            type: string
        -
          name: 'class[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: organiser
          in: query
          required: false
          schema:
            type: string
        -
          name: 'organiser[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: status
          in: query
          required: false
          schema:
            type: string
        -
          name: 'status[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: summary
          in: query
          required: false
          schema:
            type: string
        -
          name: 'summary[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: transp
          in: query
          required: false
          schema:
            type: string
        -
          name: 'transp[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: duration
          in: query
          required: false
          schema:
            type: string
        -
          name: 'duration[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: seq
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'seq[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: priority
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'priority[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: attendees
          in: query
          required: false
          schema:
            type: string
        -
          name: 'attendees[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: deepObject
          explode: true
        -
          name: attachments
          in: query
          required: false
          schema:
            type: string
        -
          name: 'attachments[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: deepObject
          explode: true
        -
          name: categories
          in: query
          required: false
          schema:
            type: string
        -
          name: 'categories[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: deepObject
          explode: true
        -
          name: comments
          in: query
          required: false
          schema:
            type: string
        -
          name: 'comments[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: deepObject
          explode: true
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Journal
      operationId: postJournalCollection
      summary: 'Creates a Journal resource.'
      responses:
        201:
          description: 'Journal resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Journal:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Journal:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Journal-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Journal-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Journal-read'
          links:
            GetJournalItem:
              parameters:
                id: '$response.body#/id'
              operationId: getJournalItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /journals/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Journal:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Journal:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Journal-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Journal-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Journal-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Journal-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Journal-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Journal-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Journal-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Journal-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Journal-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Journal-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Journal-write'
        description: 'The new Journal resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/journals/{id}':
    get:
      tags:
        - Journal
      operationId: getJournalItem
      summary: 'Retrieves a Journal resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Journal resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Journal:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Journal:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Journal-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Journal-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Journal-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Journal
      operationId: putJournalItem
      summary: 'Replaces the Journal resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Journal resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Journal:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Journal:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Journal-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Journal-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Journal-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Journal:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Journal:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Journal-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Journal-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Journal-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Journal-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Journal-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Journal-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Journal-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Journal-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Journal-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Journal-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Journal-write'
        description: 'The updated Journal resource'
    delete:
      tags:
        - Journal
      operationId: deleteJournalItem
      summary: 'Removes the Journal resource.'
      responses:
        204:
          description: 'Journal resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/journals/{id}/audit_trail':
    get:
      tags:
        - Journal
      operationId: get_audit_trailJournalItem
      summary: 'Retrieves a Journal resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Journal resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Journal:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Journal:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Journal-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Journal-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Journal-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/journals/{id}/change_log':
    get:
      tags:
        - Journal
      operationId: get_change_logsJournalItem
      summary: 'Retrieves a Journal resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Journal resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Journal:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Journal:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Journal-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Journal-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Journal-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Journal-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /resources:
    get:
      tags:
        - Resource
      operationId: getResourceCollection
      summary: 'Retrieves the collection of Resource resources.'
      responses:
        200:
          description: 'Resource collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Resource:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Resource:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: 'description[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Resource
      operationId: postResourceCollection
      summary: 'Creates a Resource resource.'
      responses:
        201:
          description: 'Resource resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Resource:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Resource:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Resource-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Resource-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Resource-read'
          links:
            GetResourceItem:
              parameters:
                id: '$response.body#/id'
              operationId: getResourceItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /resources/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Resource:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Resource:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Resource-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Resource-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Resource-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Resource-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Resource-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Resource-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Resource-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Resource-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Resource-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Resource-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Resource-write'
        description: 'The new Resource resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/resources/{id}':
    get:
      tags:
        - Resource
      operationId: getResourceItem
      summary: 'Retrieves a Resource resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Resource resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Resource:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Resource:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Resource-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Resource-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Resource-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Resource
      operationId: deleteResourceItem
      summary: 'Removes the Resource resource.'
      responses:
        204:
          description: 'Resource resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Resource
      operationId: putResourceItem
      summary: 'Replaces the Resource resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Resource resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Resource:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Resource:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Resource-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Resource-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Resource-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Resource:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Resource:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Resource-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Resource-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Resource-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Resource-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Resource-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Resource-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Resource-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Resource-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Resource-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Resource-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Resource-write'
        description: 'The updated Resource resource'
    patch:
      tags:
        - Resource
      operationId: patchResourceItem
      summary: 'Updates the Resource resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Resource resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Resource:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Resource:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resource-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Resource-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Resource-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Resource-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Resource:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Resource-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Resource-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Resource-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Resource-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Resource-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Resource-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Resource-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Resource-write'
        description: 'The updated Resource resource'
  /schedules:
    get:
      tags:
        - Schedule
      operationId: getScheduleCollection
      summary: 'Retrieves the collection of Schedule resources.'
      responses:
        200:
          description: 'Schedule collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Schedule:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Schedule:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[byDay]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[byMonth]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[byMonthDay]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[exceptDates]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[repeatCount]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[repeatFrequency]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: 'description[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: byDay
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'byDay[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: byMonth
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'byMonth[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: byMonthDay
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'byMonthDay[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: exceptDates
          in: query
          required: false
          schema:
            type: string
        -
          name: 'exceptDates[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: deepObject
          explode: true
        -
          name: repeatCount
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'repeatCount[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: repeatFrequency
          in: query
          required: false
          schema:
            type: string
        -
          name: 'repeatFrequency[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Schedule
      operationId: postScheduleCollection
      summary: 'Creates a Schedule resource.'
      responses:
        201:
          description: 'Schedule resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Schedule:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Schedule:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Schedule-read'
          links:
            GetScheduleItem:
              parameters:
                id: '$response.body#/id'
              operationId: getScheduleItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /schedules/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Schedule:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Schedule:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Schedule-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Schedule-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Schedule-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Schedule-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Schedule-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Schedule-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Schedule-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Schedule-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Schedule-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Schedule-write'
        description: 'The new Schedule resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/schedules/{id}':
    get:
      tags:
        - Schedule
      operationId: getScheduleItem
      summary: 'Retrieves a Schedule resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Schedule resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Schedule:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Schedule:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Schedule-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Schedule
      operationId: putScheduleItem
      summary: 'Replaces the Schedule resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Schedule resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Schedule:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Schedule:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Schedule-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Schedule:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Schedule:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Schedule-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Schedule-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Schedule-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Schedule-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Schedule-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Schedule-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Schedule-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Schedule-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Schedule-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Schedule-write'
        description: 'The updated Schedule resource'
    delete:
      tags:
        - Schedule
      operationId: deleteScheduleItem
      summary: 'Removes the Schedule resource.'
      responses:
        204:
          description: 'Schedule resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/schedules/{id}/audit_trail':
    get:
      tags:
        - Schedule
      operationId: get_audit_trailScheduleItem
      summary: 'Retrieves a Schedule resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Schedule resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Schedule:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Schedule:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Schedule-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/schedules/{id}/change_log':
    get:
      tags:
        - Schedule
      operationId: get_change_logsScheduleItem
      summary: 'Retrieves a Schedule resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Schedule resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Schedule:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Schedule:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Schedule-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Schedule-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/todoes/{id}/audit_trail':
    get:
      tags:
        - Todo
      operationId: get_audit_trailTodoItem
      summary: 'Retrieves a Todo resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Todo resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Todo:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Todo:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Todo-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Todo-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Todo-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/todoes/{id}/change_log':
    get:
      tags:
        - Todo
      operationId: get_change_logsTodoItem
      summary: 'Retrieves a Todo resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Todo resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Todo:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Todo:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Todo-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Todo-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Todo-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /todos:
    get:
      tags:
        - Todo
      operationId: getTodoCollection
      summary: 'Retrieves the collection of Todo resources.'
      responses:
        200:
          description: 'Todo collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Todo:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Todo:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[startDate]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[endDate]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[location]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[class]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[geo]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[organiser]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[status]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[summary]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[duration]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[contact]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[seq]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[priority]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[attendees]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[attachments]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[categories]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[comments]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[completed]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[percentageDone]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'startDate[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'startDate[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'startDate[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'startDate[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'endDate[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'endDate[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'endDate[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'endDate[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'completed[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'completed[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'completed[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'completed[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: 'description[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: startDate
          in: query
          required: false
          schema:
            type: string
        -
          name: 'startDate[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: endDate
          in: query
          required: false
          schema:
            type: string
        -
          name: 'endDate[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: location
          in: query
          required: false
          schema:
            type: string
        -
          name: 'location[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: class
          in: query
          required: false
          schema:
            type: string
        -
          name: 'class[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: geo
          in: query
          required: false
          schema:
            type: string
        -
          name: 'geo[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: organiser
          in: query
          required: false
          schema:
            type: string
        -
          name: 'organiser[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: status
          in: query
          required: false
          schema:
            type: string
        -
          name: 'status[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: summary
          in: query
          required: false
          schema:
            type: string
        -
          name: 'summary[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: duration
          in: query
          required: false
          schema:
            type: string
        -
          name: 'duration[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: contact
          in: query
          required: false
          schema:
            type: string
        -
          name: 'contact[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: seq
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'seq[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: priority
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'priority[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: attendees
          in: query
          required: false
          schema:
            type: string
        -
          name: 'attendees[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: deepObject
          explode: true
        -
          name: attachments
          in: query
          required: false
          schema:
            type: string
        -
          name: 'attachments[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: deepObject
          explode: true
        -
          name: categories
          in: query
          required: false
          schema:
            type: string
        -
          name: 'categories[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: deepObject
          explode: true
        -
          name: comments
          in: query
          required: false
          schema:
            type: string
        -
          name: 'comments[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: deepObject
          explode: true
        -
          name: completed
          in: query
          required: false
          schema:
            type: string
        -
          name: 'completed[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: percentageDone
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'percentageDone[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Todo
      operationId: postTodoCollection
      summary: 'Creates a Todo resource.'
      responses:
        201:
          description: 'Todo resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Todo:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Todo:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Todo-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Todo-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Todo-read'
          links:
            GetTodoItem:
              parameters:
                id: '$response.body#/id'
              operationId: getTodoItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /todos/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Todo:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Todo:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Todo-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Todo-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Todo-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Todo-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Todo-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Todo-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Todo-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Todo-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Todo-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Todo-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Todo-write'
        description: 'The new Todo resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/todos/{id}':
    get:
      tags:
        - Todo
      operationId: getTodoItem
      summary: 'Retrieves a Todo resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Todo resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Todo:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Todo:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Todo-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Todo-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Todo-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Todo
      operationId: putTodoItem
      summary: 'Replaces the Todo resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Todo resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Todo:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Todo:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Todo-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Todo-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Todo-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Todo-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Todo:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Todo:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Todo-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Todo-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Todo-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Todo-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Todo-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Todo-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Todo-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Todo-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Todo-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Todo-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Todo-write'
        description: 'The updated Todo resource'
    delete:
      tags:
        - Todo
      operationId: deleteTodoItem
      summary: 'Removes the Todo resource.'
      responses:
        204:
          description: 'Todo resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
components:
  schemas:
    Alarm-read:
      type: object
      description: 'Used to describe alarms for Events and Todos.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        summary:
          description: 'The summary of this event.'
          type: string
        action:
          description: 'The action of the alarm. **AUDIO**, **DISPLAY**, **EMAIL**, **PROCEDURE**'
          type: string
        trigger:
          description: 'The time the alarm should trigger relative to the start time of the related event.'
          type: string
        duration:
          description: 'The time until the alarm repeats.'
          type: integer
        repeat:
          description: 'The number of times the alarm repeats.'
          type: integer
        event:
          $ref: '#/components/schemas/Event-read'
        todo:
          $ref: '#/components/schemas/Todo-read'
        dateCreated:
          readOnly: true
          description: 'The moment this resource was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
      required:
        - name
        - action
        - trigger
        - duration
    Alarm-write:
      type: object
      description: 'Used to describe alarms for Events and Todos.'
      required:
        - name
        - action
        - trigger
        - duration
      properties:
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        summary:
          description: 'The summary of this event.'
          type: string
        action:
          description: 'The action of the alarm. **AUDIO**, **DISPLAY**, **EMAIL**, **PROCEDURE**'
          type: string
        trigger:
          description: 'The time the alarm should trigger relative to the start time of the related event.'
          type: string
        duration:
          description: 'The time until the alarm repeats.'
          type: integer
        repeat:
          description: 'The number of times the alarm repeats.'
          type: integer
        event:
          $ref: '#/components/schemas/Event-write'
        todo:
          $ref: '#/components/schemas/Todo-write'
    'Alarm:jsonld-read':
      type: object
      description: 'Used to describe alarms for Events and Todos.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        summary:
          description: 'The summary of this event.'
          type: string
        action:
          description: 'The action of the alarm. **AUDIO**, **DISPLAY**, **EMAIL**, **PROCEDURE**'
          type: string
        trigger:
          description: 'The time the alarm should trigger relative to the start time of the related event.'
          type: string
        duration:
          description: 'The time until the alarm repeats.'
          type: integer
        repeat:
          description: 'The number of times the alarm repeats.'
          type: integer
        event:
          $ref: '#/components/schemas/Event:jsonld-read'
        todo:
          $ref: '#/components/schemas/Todo:jsonld-read'
        dateCreated:
          readOnly: true
          description: 'The moment this resource was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
      required:
        - name
        - action
        - trigger
        - duration
    'Alarm:jsonld-write':
      type: object
      description: 'Used to describe alarms for Events and Todos.'
      required:
        - name
        - action
        - trigger
        - duration
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        summary:
          description: 'The summary of this event.'
          type: string
        action:
          description: 'The action of the alarm. **AUDIO**, **DISPLAY**, **EMAIL**, **PROCEDURE**'
          type: string
        trigger:
          description: 'The time the alarm should trigger relative to the start time of the related event.'
          type: string
        duration:
          description: 'The time until the alarm repeats.'
          type: integer
        repeat:
          description: 'The number of times the alarm repeats.'
          type: integer
        event:
          $ref: '#/components/schemas/Event:jsonld-write'
        todo:
          $ref: '#/components/schemas/Todo:jsonld-write'
    AuditTrail-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        request:
          readOnly: true
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        user:
          readOnly: true
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        subject:
          readOnly: true
          description: '???'
          type: string
        process:
          readOnly: true
          description: 'The procces on behalf of wich the request was made'
          type: string
        dataElements:
          readOnly: true
          description: 'The moment this request was created'
          type: array
          items:
            type: string
        dataSubjects:
          readOnly: true
          description: 'The moment this request was created'
          type: array
          items:
            type: string
        resource:
          readOnly: true
          description: 'The resource that was requested'
          type: string
        resourceType:
          readOnly: true
          description: 'The type of the resource that was requested'
          type: string
        route:
          readOnly: true
          description: 'The moment this request was created'
          type: string
        endpoint:
          readOnly: true
          description: 'The endpoint that the request was made to'
          type: string
        method:
          readOnly: true
          description: 'The method that was used'
          type: string
        accept:
          readOnly: true
          description: 'The contentType that was reqousted'
          type: string
        contentType:
          readOnly: true
          description: 'The contentType that was suplieds'
          type: string
        content:
          readOnly: true
          description: 'The moment this request was created'
          type: string
        ip:
          readOnly: true
          description: 'The moment this request was created'
          type: string
        session:
          readOnly: true
          description: 'The moment this request was created'
          type: string
        headers:
          readOnly: true
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          readOnly: true
          description: 'The status code returned to client'
          type: integer
        notFound:
          readOnly: true
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
        forbidden:
          readOnly: true
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
        ok:
          readOnly: true
          description: 'Whether or not there where any problems'
          type: boolean
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
    AuditTrail-write:
      type: object
      description: 'An resource representing a log line.'
    'AuditTrail:jsonld-read':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        request:
          readOnly: true
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        user:
          readOnly: true
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        subject:
          readOnly: true
          description: '???'
          type: string
        process:
          readOnly: true
          description: 'The procces on behalf of wich the request was made'
          type: string
        dataElements:
          readOnly: true
          description: 'The moment this request was created'
          type: array
          items:
            type: string
        dataSubjects:
          readOnly: true
          description: 'The moment this request was created'
          type: array
          items:
            type: string
        resource:
          readOnly: true
          description: 'The resource that was requested'
          type: string
        resourceType:
          readOnly: true
          description: 'The type of the resource that was requested'
          type: string
        route:
          readOnly: true
          description: 'The moment this request was created'
          type: string
        endpoint:
          readOnly: true
          description: 'The endpoint that the request was made to'
          type: string
        method:
          readOnly: true
          description: 'The method that was used'
          type: string
        accept:
          readOnly: true
          description: 'The contentType that was reqousted'
          type: string
        contentType:
          readOnly: true
          description: 'The contentType that was suplieds'
          type: string
        content:
          readOnly: true
          description: 'The moment this request was created'
          type: string
        ip:
          readOnly: true
          description: 'The moment this request was created'
          type: string
        session:
          readOnly: true
          description: 'The moment this request was created'
          type: string
        headers:
          readOnly: true
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          readOnly: true
          description: 'The status code returned to client'
          type: integer
        notFound:
          readOnly: true
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
        forbidden:
          readOnly: true
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
        ok:
          readOnly: true
          description: 'Whether or not there where any problems'
          type: boolean
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
    'AuditTrail:jsonld-write':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    Calendar-read:
      type: object
      description: 'A Calendar is a collection of events tied to an unque person or resource.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this Calendar'
          type: string
        description:
          description: 'An short description of this Calendar'
          type: string
        events:
          description: 'Events that belong to this Calendar'
          type: array
          items:
            $ref: '#/components/schemas/Event-read'
        schedules:
          description: 'Schedules that belong to this Calendar'
          type: array
          items:
            $ref: '#/components/schemas/Schedule-read'
        timeZone:
          description: 'The time zone of this calendar'
          type: string
        freebusies:
          type: array
          items:
            $ref: '#/components/schemas/Freebusy-read'
        journals:
          type: array
          items:
            $ref: '#/components/schemas/Journal-read'
        todos:
          type: array
          items:
            $ref: '#/components/schemas/Todo-read'
        dateCreated:
          readOnly: true
          description: 'The moment this resource was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
      required:
        - name
        - timeZone
    Calendar-write:
      type: object
      description: 'A Calendar is a collection of events tied to an unque person or resource.'
      required:
        - name
        - timeZone
      properties:
        name:
          description: 'The name of this Calendar'
          type: string
        description:
          description: 'An short description of this Calendar'
          type: string
        events:
          description: 'Events that belong to this Calendar'
          type: array
          items:
            $ref: '#/components/schemas/Event-write'
        schedules:
          description: 'Schedules that belong to this Calendar'
          type: array
          items:
            $ref: '#/components/schemas/Schedule-write'
        timeZone:
          description: 'The time zone of this calendar'
          type: string
        freebusies:
          type: array
          items:
            $ref: '#/components/schemas/Freebusy-write'
        journals:
          type: array
          items:
            $ref: '#/components/schemas/Journal-write'
        todos:
          type: array
          items:
            $ref: '#/components/schemas/Todo-write'
    'Calendar:jsonld-read':
      type: object
      description: 'A Calendar is a collection of events tied to an unque person or resource.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this Calendar'
          type: string
        description:
          description: 'An short description of this Calendar'
          type: string
        events:
          description: 'Events that belong to this Calendar'
          type: array
          items:
            $ref: '#/components/schemas/Event:jsonld-read'
        schedules:
          description: 'Schedules that belong to this Calendar'
          type: array
          items:
            $ref: '#/components/schemas/Schedule:jsonld-read'
        timeZone:
          description: 'The time zone of this calendar'
          type: string
        freebusies:
          type: array
          items:
            $ref: '#/components/schemas/Freebusy:jsonld-read'
        journals:
          type: array
          items:
            $ref: '#/components/schemas/Journal:jsonld-read'
        todos:
          type: array
          items:
            $ref: '#/components/schemas/Todo:jsonld-read'
        dateCreated:
          readOnly: true
          description: 'The moment this resource was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
      required:
        - name
        - timeZone
    'Calendar:jsonld-write':
      type: object
      description: 'A Calendar is a collection of events tied to an unque person or resource.'
      required:
        - name
        - timeZone
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this Calendar'
          type: string
        description:
          description: 'An short description of this Calendar'
          type: string
        events:
          description: 'Events that belong to this Calendar'
          type: array
          items:
            $ref: '#/components/schemas/Event:jsonld-write'
        schedules:
          description: 'Schedules that belong to this Calendar'
          type: array
          items:
            $ref: '#/components/schemas/Schedule:jsonld-write'
        timeZone:
          description: 'The time zone of this calendar'
          type: string
        freebusies:
          type: array
          items:
            $ref: '#/components/schemas/Freebusy:jsonld-write'
        journals:
          type: array
          items:
            $ref: '#/components/schemas/Journal:jsonld-write'
        todos:
          type: array
          items:
            $ref: '#/components/schemas/Todo:jsonld-write'
    ChangeLog-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        action:
          readOnly: true
          type: string
        objectId:
          readOnly: true
          type: string
        objectClass:
          readOnly: true
          type: string
        version:
          readOnly: true
          type: integer
        data:
          readOnly: true
          type: array
          items:
            type: string
        username:
          readOnly: true
          type: string
        session:
          readOnly: true
          description: 'The moment this request was created'
          type: string
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
    ChangeLog-write:
      type: object
      description: 'An resource representing a log line.'
    'ChangeLog:jsonld-read':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        action:
          readOnly: true
          type: string
        objectId:
          readOnly: true
          type: string
        objectClass:
          readOnly: true
          type: string
        version:
          readOnly: true
          type: integer
        data:
          readOnly: true
          type: array
          items:
            type: string
        username:
          readOnly: true
          type: string
        session:
          readOnly: true
          description: 'The moment this request was created'
          type: string
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
    'ChangeLog:jsonld-write':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    Event-read:
      type: object
      description: 'An event happening at a certain time and location, such as a concert, lecture, meeting or festival.'
      externalDocs:
        url: 'https://schema.org/Event'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        startDate:
          description: 'The moment this event starts'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        endDate:
          description: 'The moment this event ends'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        location:
          description: 'The location of this event'
          type: string
        schedule:
          description: 'An optional Schedule to which this event belongs'
          $ref: '#/components/schemas/Schedule-read'
        calendar:
          description: 'The Calendar to wich this event belongs'
          $ref: '#/components/schemas/Calendar-read'
        class:
          description: 'The security class of this event.'
          type: string
        geo:
          description: 'The coordinates of this event.'
          type: string
        organizer:
          description: 'The organiser of this event linked to with an url.'
          type: string
        status:
          description: 'The status of this event.'
          type: string
        summary:
          description: 'The summary of this event.'
          type: string
        transp:
          description: 'The determination if the event should block the duration of the event for participants.'
          type: string
        duration:
          description: 'The duration of this event.'
          type: string
        contact:
          description: 'Url of this person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        seq:
          description: 'The version number of this event.'
          type: integer
        priority:
          description: 'The priority of this event ranging from 1 (high) to 9 (low).'
          type: integer
        attendees:
          description: 'The urls of the attendees of this event.'
          type: array
          items:
            type: string
        attachments:
          readOnly: true
          description: 'The urls of the attachments of this event.'
          type: array
          items:
            type: string
        categories:
          description: 'The urls of the catergories this event belongs to.'
          type: array
          items:
            type: string
        comments:
          description: 'The urls of the comments that belong to this event.'
          type: array
          items:
            type: string
        related:
          type: array
          items:
            $ref: '#/components/schemas/Event-read'
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource-read'
        alarms:
          type: array
          items:
            $ref: '#/components/schemas/Alarm-read'
        journal:
          $ref: '#/components/schemas/Journal-read'
        dateCreated:
          readOnly: true
          description: 'The moment this resource was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
      required:
        - name
        - startDate
        - endDate
        - priority
    Event-write:
      type: object
      description: 'An event happening at a certain time and location, such as a concert, lecture, meeting or festival.'
      externalDocs:
        url: 'https://schema.org/Event'
      required:
        - name
        - startDate
        - endDate
        - priority
      properties:
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        startDate:
          description: 'The moment this event starts'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        endDate:
          description: 'The moment this event ends'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        location:
          description: 'The location of this event'
          type: string
        schedule:
          description: 'An optional Schedule to which this event belongs'
          $ref: '#/components/schemas/Schedule-write'
        calendar:
          description: 'The Calendar to wich this event belongs'
          $ref: '#/components/schemas/Calendar-write'
        class:
          description: 'The security class of this event.'
          type: string
        geo:
          description: 'The coordinates of this event.'
          type: string
        organizer:
          description: 'The organiser of this event linked to with an url.'
          type: string
        status:
          description: 'The status of this event.'
          type: string
        summary:
          description: 'The summary of this event.'
          type: string
        transp:
          description: 'The determination if the event should block the duration of the event for participants.'
          type: string
        duration:
          description: 'The duration of this event.'
          type: string
        contact:
          description: 'Url of this person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        seq:
          description: 'The version number of this event.'
          type: integer
        priority:
          description: 'The priority of this event ranging from 1 (high) to 9 (low).'
          type: integer
        attendees:
          description: 'The urls of the attendees of this event.'
          type: array
          items:
            type: string
        attachments:
          readOnly: true
          description: 'The urls of the attachments of this event.'
          type: array
          items:
            type: string
        categories:
          description: 'The urls of the catergories this event belongs to.'
          type: array
          items:
            type: string
        comments:
          description: 'The urls of the comments that belong to this event.'
          type: array
          items:
            type: string
        related:
          type: array
          items:
            $ref: '#/components/schemas/Event-write'
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource-write'
        alarms:
          type: array
          items:
            $ref: '#/components/schemas/Alarm-write'
        journal:
          $ref: '#/components/schemas/Journal-write'
    'Event:jsonld-read':
      type: object
      description: 'An event happening at a certain time and location, such as a concert, lecture, meeting or festival.'
      externalDocs:
        url: 'https://schema.org/Event'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        startDate:
          description: 'The moment this event starts'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        endDate:
          description: 'The moment this event ends'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        location:
          description: 'The location of this event'
          type: string
        schedule:
          description: 'An optional Schedule to which this event belongs'
          $ref: '#/components/schemas/Schedule:jsonld-read'
        calendar:
          description: 'The Calendar to wich this event belongs'
          $ref: '#/components/schemas/Calendar:jsonld-read'
        class:
          description: 'The security class of this event.'
          type: string
        geo:
          description: 'The coordinates of this event.'
          type: string
        organizer:
          description: 'The organiser of this event linked to with an url.'
          type: string
        status:
          description: 'The status of this event.'
          type: string
        summary:
          description: 'The summary of this event.'
          type: string
        transp:
          description: 'The determination if the event should block the duration of the event for participants.'
          type: string
        duration:
          description: 'The duration of this event.'
          type: string
        contact:
          description: 'Url of this person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        seq:
          description: 'The version number of this event.'
          type: integer
        priority:
          description: 'The priority of this event ranging from 1 (high) to 9 (low).'
          type: integer
        attendees:
          description: 'The urls of the attendees of this event.'
          type: array
          items:
            type: string
        attachments:
          readOnly: true
          description: 'The urls of the attachments of this event.'
          type: array
          items:
            type: string
        categories:
          description: 'The urls of the catergories this event belongs to.'
          type: array
          items:
            type: string
        comments:
          description: 'The urls of the comments that belong to this event.'
          type: array
          items:
            type: string
        related:
          type: array
          items:
            $ref: '#/components/schemas/Event:jsonld-read'
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource:jsonld-read'
        alarms:
          type: array
          items:
            $ref: '#/components/schemas/Alarm:jsonld-read'
        journal:
          $ref: '#/components/schemas/Journal:jsonld-read'
        dateCreated:
          readOnly: true
          description: 'The moment this resource was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
      required:
        - name
        - startDate
        - endDate
        - priority
    'Event:jsonld-write':
      type: object
      description: 'An event happening at a certain time and location, such as a concert, lecture, meeting or festival.'
      externalDocs:
        url: 'https://schema.org/Event'
      required:
        - name
        - startDate
        - endDate
        - priority
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        startDate:
          description: 'The moment this event starts'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        endDate:
          description: 'The moment this event ends'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        location:
          description: 'The location of this event'
          type: string
        schedule:
          description: 'An optional Schedule to which this event belongs'
          $ref: '#/components/schemas/Schedule:jsonld-write'
        calendar:
          description: 'The Calendar to wich this event belongs'
          $ref: '#/components/schemas/Calendar:jsonld-write'
        class:
          description: 'The security class of this event.'
          type: string
        geo:
          description: 'The coordinates of this event.'
          type: string
        organizer:
          description: 'The organiser of this event linked to with an url.'
          type: string
        status:
          description: 'The status of this event.'
          type: string
        summary:
          description: 'The summary of this event.'
          type: string
        transp:
          description: 'The determination if the event should block the duration of the event for participants.'
          type: string
        duration:
          description: 'The duration of this event.'
          type: string
        contact:
          description: 'Url of this person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        seq:
          description: 'The version number of this event.'
          type: integer
        priority:
          description: 'The priority of this event ranging from 1 (high) to 9 (low).'
          type: integer
        attendees:
          description: 'The urls of the attendees of this event.'
          type: array
          items:
            type: string
        attachments:
          readOnly: true
          description: 'The urls of the attachments of this event.'
          type: array
          items:
            type: string
        categories:
          description: 'The urls of the catergories this event belongs to.'
          type: array
          items:
            type: string
        comments:
          description: 'The urls of the comments that belong to this event.'
          type: array
          items:
            type: string
        related:
          type: array
          items:
            $ref: '#/components/schemas/Event:jsonld-write'
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource:jsonld-write'
        alarms:
          type: array
          items:
            $ref: '#/components/schemas/Alarm:jsonld-write'
        journal:
          $ref: '#/components/schemas/Journal:jsonld-write'
    Freebusy-read:
      type: object
      description: 'This entity checks if a person is free or busy for a event.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        attendee:
          description: 'The urls of the attendees of this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        comments:
          description: 'The urls of the comments that belong to this event.'
          type: array
          items:
            type: string
        contact:
          description: 'Url of this person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        startDate:
          description: 'The moment this event starts'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        endDate:
          description: 'The moment this event ends'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        duration:
          description: 'The duration of this event.'
          type: string
        organiser:
          description: 'The organiser of this event linked to with an url.'
          type: string
        freebusy:
          description: 'The determination of the type freebusy. **FREE**, **BUSY**'
          type: string
        calendar:
          $ref: '#/components/schemas/Calendar-read'
        schedule:
          $ref: '#/components/schemas/Schedule-read'
        dateCreated:
          readOnly: true
          description: 'The moment this resource was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
      required:
        - startDate
        - endDate
    Freebusy-write:
      type: object
      description: 'This entity checks if a person is free or busy for a event.'
      properties:
        description:
          description: 'An short description of this Event'
          type: string
        attendee:
          description: 'The urls of the attendees of this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        comments:
          description: 'The urls of the comments that belong to this event.'
          type: array
          items:
            type: string
        contact:
          description: 'Url of this person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        startDate:
          description: 'The moment this event starts'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        endDate:
          description: 'The moment this event ends'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        duration:
          description: 'The duration of this event.'
          type: string
        organiser:
          description: 'The organiser of this event linked to with an url.'
          type: string
        freebusy:
          description: 'The determination of the type freebusy. **FREE**, **BUSY**'
          type: string
        calendar:
          $ref: '#/components/schemas/Calendar-write'
        schedule:
          $ref: '#/components/schemas/Schedule-write'
      required:
        - startDate
        - endDate
    'Freebusy:jsonld-read':
      type: object
      description: 'This entity checks if a person is free or busy for a event.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        attendee:
          description: 'The urls of the attendees of this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        comments:
          description: 'The urls of the comments that belong to this event.'
          type: array
          items:
            type: string
        contact:
          description: 'Url of this person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        startDate:
          description: 'The moment this event starts'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        endDate:
          description: 'The moment this event ends'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        duration:
          description: 'The duration of this event.'
          type: string
        organiser:
          description: 'The organiser of this event linked to with an url.'
          type: string
        freebusy:
          description: 'The determination of the type freebusy. **FREE**, **BUSY**'
          type: string
        calendar:
          $ref: '#/components/schemas/Calendar:jsonld-read'
        schedule:
          $ref: '#/components/schemas/Schedule:jsonld-read'
        dateCreated:
          readOnly: true
          description: 'The moment this resource was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
      required:
        - startDate
        - endDate
    'Freebusy:jsonld-write':
      type: object
      description: 'This entity checks if a person is free or busy for a event.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        attendee:
          description: 'The urls of the attendees of this event.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        comments:
          description: 'The urls of the comments that belong to this event.'
          type: array
          items:
            type: string
        contact:
          description: 'Url of this person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        startDate:
          description: 'The moment this event starts'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        endDate:
          description: 'The moment this event ends'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        duration:
          description: 'The duration of this event.'
          type: string
        organiser:
          description: 'The organiser of this event linked to with an url.'
          type: string
        freebusy:
          description: 'The determination of the type freebusy. **FREE**, **BUSY**'
          type: string
        calendar:
          $ref: '#/components/schemas/Calendar:jsonld-write'
        schedule:
          $ref: '#/components/schemas/Schedule:jsonld-write'
      required:
        - startDate
        - endDate
    Journal-read:
      type: object
      description: 'A journal from an event.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        startDate:
          description: 'The moment this event starts'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        endDate:
          description: 'The moment this event ends'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        class:
          description: 'The security class of this event.'
          type: string
        organiser:
          description: 'The organiser of this event linked to with an url.'
          type: string
        status:
          description: 'The status of this event.'
          type: string
        summary:
          description: 'The summary of this event.'
          type: string
        transp:
          description: 'The determination if the event should block the duration of the event for participants.'
          type: string
        duration:
          description: 'The duration of this event.'
          type: string
        seq:
          description: 'The version number of this event.'
          type: integer
        priority:
          description: 'The priority of this event ranging from 1 (high) to 9 (low).'
          type: integer
        attendees:
          description: 'The urls of the attendees of this event.'
          type: array
          items:
            type: string
        attachments:
          readOnly: true
          description: 'The urls of the attachments of this event.'
          type: array
          items:
            type: string
        categories:
          description: 'The urls of the catergories this event belongs to.'
          type: array
          items:
            type: string
        comments:
          description: 'The urls of the comments that belong to this event.'
          type: array
          items:
            type: string
        calendar:
          $ref: '#/components/schemas/Calendar-read'
        event:
          $ref: '#/components/schemas/Event-read'
        dateCreated:
          readOnly: true
          description: 'The moment this resource was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
      required:
        - name
        - startDate
        - endDate
    Journal-write:
      type: object
      description: 'A journal from an event.'
      required:
        - name
        - startDate
        - endDate
      properties:
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        startDate:
          description: 'The moment this event starts'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        endDate:
          description: 'The moment this event ends'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        class:
          description: 'The security class of this event.'
          type: string
        organiser:
          description: 'The organiser of this event linked to with an url.'
          type: string
        status:
          description: 'The status of this event.'
          type: string
        summary:
          description: 'The summary of this event.'
          type: string
        transp:
          description: 'The determination if the event should block the duration of the event for participants.'
          type: string
        duration:
          description: 'The duration of this event.'
          type: string
        seq:
          description: 'The version number of this event.'
          type: integer
        priority:
          description: 'The priority of this event ranging from 1 (high) to 9 (low).'
          type: integer
        attendees:
          description: 'The urls of the attendees of this event.'
          type: array
          items:
            type: string
        attachments:
          readOnly: true
          description: 'The urls of the attachments of this event.'
          type: array
          items:
            type: string
        categories:
          description: 'The urls of the catergories this event belongs to.'
          type: array
          items:
            type: string
        comments:
          description: 'The urls of the comments that belong to this event.'
          type: array
          items:
            type: string
        calendar:
          $ref: '#/components/schemas/Calendar-write'
        event:
          $ref: '#/components/schemas/Event-write'
    'Journal:jsonld-read':
      type: object
      description: 'A journal from an event.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        startDate:
          description: 'The moment this event starts'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        endDate:
          description: 'The moment this event ends'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        class:
          description: 'The security class of this event.'
          type: string
        organiser:
          description: 'The organiser of this event linked to with an url.'
          type: string
        status:
          description: 'The status of this event.'
          type: string
        summary:
          description: 'The summary of this event.'
          type: string
        transp:
          description: 'The determination if the event should block the duration of the event for participants.'
          type: string
        duration:
          description: 'The duration of this event.'
          type: string
        seq:
          description: 'The version number of this event.'
          type: integer
        priority:
          description: 'The priority of this event ranging from 1 (high) to 9 (low).'
          type: integer
        attendees:
          description: 'The urls of the attendees of this event.'
          type: array
          items:
            type: string
        attachments:
          readOnly: true
          description: 'The urls of the attachments of this event.'
          type: array
          items:
            type: string
        categories:
          description: 'The urls of the catergories this event belongs to.'
          type: array
          items:
            type: string
        comments:
          description: 'The urls of the comments that belong to this event.'
          type: array
          items:
            type: string
        calendar:
          $ref: '#/components/schemas/Calendar:jsonld-read'
        event:
          $ref: '#/components/schemas/Event:jsonld-read'
        dateCreated:
          readOnly: true
          description: 'The moment this resource was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
      required:
        - name
        - startDate
        - endDate
    'Journal:jsonld-write':
      type: object
      description: 'A journal from an event.'
      required:
        - name
        - startDate
        - endDate
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        startDate:
          description: 'The moment this event starts'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        endDate:
          description: 'The moment this event ends'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        class:
          description: 'The security class of this event.'
          type: string
        organiser:
          description: 'The organiser of this event linked to with an url.'
          type: string
        status:
          description: 'The status of this event.'
          type: string
        summary:
          description: 'The summary of this event.'
          type: string
        transp:
          description: 'The determination if the event should block the duration of the event for participants.'
          type: string
        duration:
          description: 'The duration of this event.'
          type: string
        seq:
          description: 'The version number of this event.'
          type: integer
        priority:
          description: 'The priority of this event ranging from 1 (high) to 9 (low).'
          type: integer
        attendees:
          description: 'The urls of the attendees of this event.'
          type: array
          items:
            type: string
        attachments:
          readOnly: true
          description: 'The urls of the attachments of this event.'
          type: array
          items:
            type: string
        categories:
          description: 'The urls of the catergories this event belongs to.'
          type: array
          items:
            type: string
        comments:
          description: 'The urls of the comments that belong to this event.'
          type: array
          items:
            type: string
        calendar:
          $ref: '#/components/schemas/Calendar:jsonld-write'
        event:
          $ref: '#/components/schemas/Event:jsonld-write'
    Resource-read:
      type: object
      description: 'Describes resources that can be needed for an event.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event-read'
        todos:
          type: array
          items:
            $ref: '#/components/schemas/Todo-read'
        dateCreated:
          readOnly: true
          description: 'The moment this resource was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
      required:
        - name
    Resource-write:
      type: object
      description: 'Describes resources that can be needed for an event.'
      required:
        - name
      properties:
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event-write'
        todos:
          type: array
          items:
            $ref: '#/components/schemas/Todo-write'
    'Resource:jsonld-read':
      type: object
      description: 'Describes resources that can be needed for an event.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event:jsonld-read'
        todos:
          type: array
          items:
            $ref: '#/components/schemas/Todo:jsonld-read'
        dateCreated:
          readOnly: true
          description: 'The moment this resource was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
      required:
        - name
    'Resource:jsonld-write':
      type: object
      description: 'Describes resources that can be needed for an event.'
      required:
        - name
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event:jsonld-write'
        todos:
          type: array
          items:
            $ref: '#/components/schemas/Todo:jsonld-write'
    Schedule-read:
      type: object
      description: 'A schedule defines a repeating time period used to describe a regularly occurring Event. At a minimum a schedule will specify repeatFrequency which describes the interval between occurences of the event. Additional information can be provided to specify the schedule more precisely. This includes identifying the day(s) of the week or month when the recurring event will take place, in addition to its start and end time. Schedules may also have start and end dates to indicate when they are active, e.g. to define a limited calendar of events.'
      externalDocs:
        url: 'http://schema.org/PostalAddress'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this Schedule'
          type: string
        description:
          description: 'An short description of this Schedule'
          type: string
        byDay:
          description: 'Defines the day(s) of the week on which a recurring Event takes place. Sunday is both 0 and 7.'
          type: integer
        byMonth:
          description: 'Defines the month(s) of the year on which a recurring Event takes place. Specified as an Integer between 1-12. January is 1.'
          type: integer
        byMonthDay:
          description: 'Defines the day(s) of the month on which a recurring Event takes place. Specified as an Integer between 1-31.'
          type: integer
        exceptDates:
          description: 'Defines the day(s) of the month on which a recurring Event takes place. Specified as an Integer between 1-31.'
          type: array
          items:
            type: string
        repeatCount:
          description: 'Defines the number of times a recurring Event will take place'
          type: integer
        repeatFrequency:
          description: 'Defines the frequency at which Events will occur according to a schedule Schedule. The intervals between events should be defined as a [Duration](https://en.wikipedia.org/wiki/ISO_8601#Durations) of time.'
          type: string
        calendar:
          description: 'The Calendar to wich this Schedule belongs'
          $ref: '#/components/schemas/Calendar-read'
        events:
          description: 'The events that belong to or are caused by this Schedule'
          type: array
          items:
            $ref: '#/components/schemas/Event-read'
        freebusies:
          description: 'The freebusies that belong to or are caused by this Schedule'
          type: array
          items:
            $ref: '#/components/schemas/Freebusy-read'
        todos:
          description: 'The todos that belong to or are caused by this Schedule'
          type: array
          items:
            $ref: '#/components/schemas/Todo-read'
        dateCreated:
          readOnly: true
          description: 'The moment this resource was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
      required:
        - name
    Schedule-write:
      type: object
      description: 'A schedule defines a repeating time period used to describe a regularly occurring Event. At a minimum a schedule will specify repeatFrequency which describes the interval between occurences of the event. Additional information can be provided to specify the schedule more precisely. This includes identifying the day(s) of the week or month when the recurring event will take place, in addition to its start and end time. Schedules may also have start and end dates to indicate when they are active, e.g. to define a limited calendar of events.'
      externalDocs:
        url: 'http://schema.org/PostalAddress'
      required:
        - name
      properties:
        name:
          description: 'The name of this Schedule'
          type: string
        description:
          description: 'An short description of this Schedule'
          type: string
        byDay:
          description: 'Defines the day(s) of the week on which a recurring Event takes place. Sunday is both 0 and 7.'
          type: integer
        byMonth:
          description: 'Defines the month(s) of the year on which a recurring Event takes place. Specified as an Integer between 1-12. January is 1.'
          type: integer
        byMonthDay:
          description: 'Defines the day(s) of the month on which a recurring Event takes place. Specified as an Integer between 1-31.'
          type: integer
        exceptDates:
          description: 'Defines the day(s) of the month on which a recurring Event takes place. Specified as an Integer between 1-31.'
          type: array
          items:
            type: string
        repeatCount:
          description: 'Defines the number of times a recurring Event will take place'
          type: integer
        repeatFrequency:
          description: 'Defines the frequency at which Events will occur according to a schedule Schedule. The intervals between events should be defined as a [Duration](https://en.wikipedia.org/wiki/ISO_8601#Durations) of time.'
          type: string
        calendar:
          description: 'The Calendar to wich this Schedule belongs'
          $ref: '#/components/schemas/Calendar-write'
        events:
          description: 'The events that belong to or are caused by this Schedule'
          type: array
          items:
            $ref: '#/components/schemas/Event-write'
        freebusies:
          description: 'The freebusies that belong to or are caused by this Schedule'
          type: array
          items:
            $ref: '#/components/schemas/Freebusy-write'
        todos:
          description: 'The todos that belong to or are caused by this Schedule'
          type: array
          items:
            $ref: '#/components/schemas/Todo-write'
    'Schedule:jsonld-read':
      type: object
      description: 'A schedule defines a repeating time period used to describe a regularly occurring Event. At a minimum a schedule will specify repeatFrequency which describes the interval between occurences of the event. Additional information can be provided to specify the schedule more precisely. This includes identifying the day(s) of the week or month when the recurring event will take place, in addition to its start and end time. Schedules may also have start and end dates to indicate when they are active, e.g. to define a limited calendar of events.'
      externalDocs:
        url: 'http://schema.org/PostalAddress'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this Schedule'
          type: string
        description:
          description: 'An short description of this Schedule'
          type: string
        byDay:
          description: 'Defines the day(s) of the week on which a recurring Event takes place. Sunday is both 0 and 7.'
          type: integer
        byMonth:
          description: 'Defines the month(s) of the year on which a recurring Event takes place. Specified as an Integer between 1-12. January is 1.'
          type: integer
        byMonthDay:
          description: 'Defines the day(s) of the month on which a recurring Event takes place. Specified as an Integer between 1-31.'
          type: integer
        exceptDates:
          description: 'Defines the day(s) of the month on which a recurring Event takes place. Specified as an Integer between 1-31.'
          type: array
          items:
            type: string
        repeatCount:
          description: 'Defines the number of times a recurring Event will take place'
          type: integer
        repeatFrequency:
          description: 'Defines the frequency at which Events will occur according to a schedule Schedule. The intervals between events should be defined as a [Duration](https://en.wikipedia.org/wiki/ISO_8601#Durations) of time.'
          type: string
        calendar:
          description: 'The Calendar to wich this Schedule belongs'
          $ref: '#/components/schemas/Calendar:jsonld-read'
        events:
          description: 'The events that belong to or are caused by this Schedule'
          type: array
          items:
            $ref: '#/components/schemas/Event:jsonld-read'
        freebusies:
          description: 'The freebusies that belong to or are caused by this Schedule'
          type: array
          items:
            $ref: '#/components/schemas/Freebusy:jsonld-read'
        todos:
          description: 'The todos that belong to or are caused by this Schedule'
          type: array
          items:
            $ref: '#/components/schemas/Todo:jsonld-read'
        dateCreated:
          readOnly: true
          description: 'The moment this resource was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
      required:
        - name
    'Schedule:jsonld-write':
      type: object
      description: 'A schedule defines a repeating time period used to describe a regularly occurring Event. At a minimum a schedule will specify repeatFrequency which describes the interval between occurences of the event. Additional information can be provided to specify the schedule more precisely. This includes identifying the day(s) of the week or month when the recurring event will take place, in addition to its start and end time. Schedules may also have start and end dates to indicate when they are active, e.g. to define a limited calendar of events.'
      externalDocs:
        url: 'http://schema.org/PostalAddress'
      required:
        - name
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this Schedule'
          type: string
        description:
          description: 'An short description of this Schedule'
          type: string
        byDay:
          description: 'Defines the day(s) of the week on which a recurring Event takes place. Sunday is both 0 and 7.'
          type: integer
        byMonth:
          description: 'Defines the month(s) of the year on which a recurring Event takes place. Specified as an Integer between 1-12. January is 1.'
          type: integer
        byMonthDay:
          description: 'Defines the day(s) of the month on which a recurring Event takes place. Specified as an Integer between 1-31.'
          type: integer
        exceptDates:
          description: 'Defines the day(s) of the month on which a recurring Event takes place. Specified as an Integer between 1-31.'
          type: array
          items:
            type: string
        repeatCount:
          description: 'Defines the number of times a recurring Event will take place'
          type: integer
        repeatFrequency:
          description: 'Defines the frequency at which Events will occur according to a schedule Schedule. The intervals between events should be defined as a [Duration](https://en.wikipedia.org/wiki/ISO_8601#Durations) of time.'
          type: string
        calendar:
          description: 'The Calendar to wich this Schedule belongs'
          $ref: '#/components/schemas/Calendar:jsonld-write'
        events:
          description: 'The events that belong to or are caused by this Schedule'
          type: array
          items:
            $ref: '#/components/schemas/Event:jsonld-write'
        freebusies:
          description: 'The freebusies that belong to or are caused by this Schedule'
          type: array
          items:
            $ref: '#/components/schemas/Freebusy:jsonld-write'
        todos:
          description: 'The todos that belong to or are caused by this Schedule'
          type: array
          items:
            $ref: '#/components/schemas/Todo:jsonld-write'
    Todo-read:
      type: object
      description: 'A to-do from an event.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        startDate:
          description: 'The moment this event starts'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        endDate:
          description: 'The moment this event ends'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        location:
          description: 'The location of this event'
          type: string
        class:
          description: 'The security class of this event.'
          type: string
        geo:
          description: 'The coordinates of this event.'
          type: string
        organiser:
          description: 'The organiser of this event linked to with an url.'
          type: string
        status:
          description: 'The status of this evemt.'
          type: string
        summary:
          description: 'The summary of this event.'
          type: string
        duration:
          description: 'The duration of this event.'
          type: string
        contact:
          description: 'Url of this person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        seq:
          description: 'The version number of this event.'
          type: integer
        priority:
          description: 'The priority of this event ranging from 1 (high) to 9 (low).'
          type: integer
        attendees:
          description: 'The urls of the attendees of this event.'
          type: array
          items:
            type: string
        attachments:
          readOnly: true
          description: 'The urls of the attachments of this event.'
          type: array
          items:
            type: string
        categories:
          description: 'The urls of the catergories this event belongs to.'
          type: array
          items:
            type: string
        comments:
          description: 'The urls of the comments that belong to this event.'
          type: array
          items:
            type: string
        completed:
          description: 'The date and time a to-do is completed.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        percentageDone:
          description: 'The percentage of a to-do that has been comepleted.'
          type: integer
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource-read'
        alarm:
          $ref: '#/components/schemas/Alarm-read'
        calendar:
          $ref: '#/components/schemas/Calendar-read'
        schedule:
          $ref: '#/components/schemas/Schedule-read'
        dateCreated:
          readOnly: true
          description: 'The moment this resource was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
      required:
        - name
        - startDate
        - endDate
    Todo-write:
      type: object
      description: 'A to-do from an event.'
      required:
        - name
        - startDate
        - endDate
      properties:
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        startDate:
          description: 'The moment this event starts'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        endDate:
          description: 'The moment this event ends'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        location:
          description: 'The location of this event'
          type: string
        class:
          description: 'The security class of this event.'
          type: string
        geo:
          description: 'The coordinates of this event.'
          type: string
        organiser:
          description: 'The organiser of this event linked to with an url.'
          type: string
        status:
          description: 'The status of this evemt.'
          type: string
        summary:
          description: 'The summary of this event.'
          type: string
        duration:
          description: 'The duration of this event.'
          type: string
        contact:
          description: 'Url of this person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        seq:
          description: 'The version number of this event.'
          type: integer
        priority:
          description: 'The priority of this event ranging from 1 (high) to 9 (low).'
          type: integer
        attendees:
          description: 'The urls of the attendees of this event.'
          type: array
          items:
            type: string
        attachments:
          readOnly: true
          description: 'The urls of the attachments of this event.'
          type: array
          items:
            type: string
        categories:
          description: 'The urls of the catergories this event belongs to.'
          type: array
          items:
            type: string
        comments:
          description: 'The urls of the comments that belong to this event.'
          type: array
          items:
            type: string
        completed:
          description: 'The date and time a to-do is completed.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        percentageDone:
          description: 'The percentage of a to-do that has been comepleted.'
          type: integer
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource-write'
        alarm:
          $ref: '#/components/schemas/Alarm-write'
        calendar:
          $ref: '#/components/schemas/Calendar-write'
        schedule:
          $ref: '#/components/schemas/Schedule-write'
    'Todo:jsonld-read':
      type: object
      description: 'A to-do from an event.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        startDate:
          description: 'The moment this event starts'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        endDate:
          description: 'The moment this event ends'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        location:
          description: 'The location of this event'
          type: string
        class:
          description: 'The security class of this event.'
          type: string
        geo:
          description: 'The coordinates of this event.'
          type: string
        organiser:
          description: 'The organiser of this event linked to with an url.'
          type: string
        status:
          description: 'The status of this evemt.'
          type: string
        summary:
          description: 'The summary of this event.'
          type: string
        duration:
          description: 'The duration of this event.'
          type: string
        contact:
          description: 'Url of this person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        seq:
          description: 'The version number of this event.'
          type: integer
        priority:
          description: 'The priority of this event ranging from 1 (high) to 9 (low).'
          type: integer
        attendees:
          description: 'The urls of the attendees of this event.'
          type: array
          items:
            type: string
        attachments:
          readOnly: true
          description: 'The urls of the attachments of this event.'
          type: array
          items:
            type: string
        categories:
          description: 'The urls of the catergories this event belongs to.'
          type: array
          items:
            type: string
        comments:
          description: 'The urls of the comments that belong to this event.'
          type: array
          items:
            type: string
        completed:
          description: 'The date and time a to-do is completed.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        percentageDone:
          description: 'The percentage of a to-do that has been comepleted.'
          type: integer
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource:jsonld-read'
        alarm:
          $ref: '#/components/schemas/Alarm:jsonld-read'
        calendar:
          $ref: '#/components/schemas/Calendar:jsonld-read'
        schedule:
          $ref: '#/components/schemas/Schedule:jsonld-read'
        dateCreated:
          readOnly: true
          description: 'The moment this resource was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
      required:
        - name
        - startDate
        - endDate
    'Todo:jsonld-write':
      type: object
      description: 'A to-do from an event.'
      required:
        - name
        - startDate
        - endDate
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this Event'
          type: string
        startDate:
          description: 'The moment this event starts'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        endDate:
          description: 'The moment this event ends'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        location:
          description: 'The location of this event'
          type: string
        class:
          description: 'The security class of this event.'
          type: string
        geo:
          description: 'The coordinates of this event.'
          type: string
        organiser:
          description: 'The organiser of this event linked to with an url.'
          type: string
        status:
          description: 'The status of this evemt.'
          type: string
        summary:
          description: 'The summary of this event.'
          type: string
        duration:
          description: 'The duration of this event.'
          type: string
        contact:
          description: 'Url of this person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        seq:
          description: 'The version number of this event.'
          type: integer
        priority:
          description: 'The priority of this event ranging from 1 (high) to 9 (low).'
          type: integer
        attendees:
          description: 'The urls of the attendees of this event.'
          type: array
          items:
            type: string
        attachments:
          readOnly: true
          description: 'The urls of the attachments of this event.'
          type: array
          items:
            type: string
        categories:
          description: 'The urls of the catergories this event belongs to.'
          type: array
          items:
            type: string
        comments:
          description: 'The urls of the comments that belong to this event.'
          type: array
          items:
            type: string
        completed:
          description: 'The date and time a to-do is completed.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        percentageDone:
          description: 'The percentage of a to-do that has been comepleted.'
          type: integer
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource:jsonld-write'
        alarm:
          $ref: '#/components/schemas/Alarm:jsonld-write'
        calendar:
          $ref: '#/components/schemas/Calendar:jsonld-write'
        schedule:
          $ref: '#/components/schemas/Schedule:jsonld-write'
definitions:
  Alarm-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this RequestType'
        type: string
        example: 'My RequestType'
        maxLength: 255
      description:
        description: 'An short description of this Event'
        type: string
        example: 'This is the best Event ever'
        maxLength: 2550
      summary:
        description: 'The summary of this event.'
        type: string
        example: 'This is the best event ever.'
        maxLength: 255
      action:
        description: 'The action of the alarm. **AUDIO**, **DISPLAY**, **EMAIL**, **PROCEDURE**'
        type: string
        example: AUDIO
      trigger:
        description: 'The time the alarm should trigger relative to the start time of the related event.'
        type: \DateInterval
        example: '-PT30M'
      duration:
        description: 'The time until the alarm repeats.'
        type: \DateInterval
        example: PT30M
      repeat:
        description: 'The number of times the alarm repeats.'
        type: int
        example: '4'
      dateCreated:
        description: 'The moment this resource was created'
        type: \Datetime
      dateModified:
        description: 'The moment this resource last Modified'
        type: \Datetime
      event: []
      todo: []
    required:
      - name
      - action
      - trigger
      - duration
  Alarm-write:
    properties:
      name:
        description: 'The name of this RequestType'
        type: string
        example: 'My RequestType'
        maxLength: 255
      description:
        description: 'An short description of this Event'
        type: string
        example: 'This is the best Event ever'
        maxLength: 2550
      summary:
        description: 'The summary of this event.'
        type: string
        example: 'This is the best event ever.'
        maxLength: 255
      action:
        description: 'The action of the alarm. **AUDIO**, **DISPLAY**, **EMAIL**, **PROCEDURE**'
        type: string
        example: AUDIO
      trigger:
        description: 'The time the alarm should trigger relative to the start time of the related event.'
        type: \DateInterval
        example: '-PT30M'
      duration:
        description: 'The time until the alarm repeats.'
        type: \DateInterval
        example: PT30M
      repeat:
        description: 'The number of times the alarm repeats.'
        type: int
        example: '4'
      event: []
      todo: []
    required:
      - name
      - action
      - trigger
      - duration
  Event-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this RequestType'
        type: string
        example: 'My RequestType'
        maxLength: 255
      description:
        description: 'An short description of this Event'
        type: string
        example: 'This is the best Event ever'
        maxLength: 2550
      startDate:
        description: 'The moment this event starts'
        type: string
        example: '2020-04-16 12:24:44'
        format: date-time
      endDate:
        description: 'The moment this event ends'
        type: string
        example: '2020-04-16 12:24:44'
        format: date-time
      location:
        description: 'The location of this event'
        type: string
        example: 'Dam 1, Amsterdam'
        maxLength: 255
      class:
        description: 'The security class of this event.'
        type: string
        example: PUBLIC
        maxLength: 255
      geo:
        description: 'The coordinates of this event.'
        type: string
        example: '81.15147,10.36374,42.26'
        maxLength: 255
      organizer:
        description: 'The organiser of this event linked to with an url.'
        type: string
        example: conduction.nl
        maxLength: 255
      status:
        description: 'The status of this event.'
        type: string
        example: Confirmed
        maxLength: 255
      summary:
        description: 'The summary of this event.'
        type: string
        example: 'This is the best event ever.'
        maxLength: 255
      transp:
        description: 'The determination if the event should block the duration of the event for participants.'
        type: string
        example: Transparent
        maxLength: 255
      duration:
        description: 'The duration of this event.'
        type: \DateInterval
        example: P0M3
      contact:
        description: 'Url of this person'
        type: string
        example: 'https://con.example.org'
        format: url
      seq:
        description: 'The version number of this event.'
        type: int
        example: '1'
      priority:
        description: 'The priority of this event ranging from 1 (high) to 9 (low).'
        type: int
        example: '1'
      attendees:
        description: 'The urls of the attendees of this event.'
        type: array
        example: 'https://con.example.com, https://con.example2.com'
      attachments:
        description: 'The urls of the attachments of this event.'
        type: array
        example: 'https://example.org, https://example2.org'
      categories:
        description: 'The urls of the catergories this event belongs to.'
        type: array
        example: 'https://con.example.com, https://con.example2.com'
      comments:
        description: 'The urls of the comments that belong to this event.'
        type: array
        example: 'https://con.example.com, https://con.example2.com'
      dateCreated:
        description: 'The moment this resource was created'
        type: \DateTime
      dateModified:
        description: 'The moment this resource last Modified'
        type: \Datetime
      schedule:
        description: 'An optional Schedule to which this event belongs'
        type: \Schedule
      calendar:
        description: 'The Calendar to wich this event belongs'
        type: \Calendar
      related: []
      resources: []
      alarms: []
      journal: []
    required:
      - name
      - startDate
      - endDate
  Event-write:
    properties:
      name:
        description: 'The name of this RequestType'
        type: string
        example: 'My RequestType'
        maxLength: 255
      description:
        description: 'An short description of this Event'
        type: string
        example: 'This is the best Event ever'
        maxLength: 2550
      startDate:
        description: 'The moment this event starts'
        type: string
        example: '2020-04-16 12:24:44'
        format: date-time
      endDate:
        description: 'The moment this event ends'
        type: string
        example: '2020-04-16 12:24:44'
        format: date-time
      location:
        description: 'The location of this event'
        type: string
        example: 'Dam 1, Amsterdam'
        maxLength: 255
      class:
        description: 'The security class of this event.'
        type: string
        example: PUBLIC
        maxLength: 255
      geo:
        description: 'The coordinates of this event.'
        type: string
        example: '81.15147,10.36374,42.26'
        maxLength: 255
      organizer:
        description: 'The organiser of this event linked to with an url.'
        type: string
        example: conduction.nl
        maxLength: 255
      status:
        description: 'The status of this event.'
        type: string
        example: Confirmed
        maxLength: 255
      summary:
        description: 'The summary of this event.'
        type: string
        example: 'This is the best event ever.'
        maxLength: 255
      transp:
        description: 'The determination if the event should block the duration of the event for participants.'
        type: string
        example: Transparent
        maxLength: 255
      duration:
        description: 'The duration of this event.'
        type: \DateInterval
        example: P0M3
      contact:
        description: 'Url of this person'
        type: string
        example: 'https://con.example.org'
        format: url
      seq:
        description: 'The version number of this event.'
        type: int
        example: '1'
      priority:
        description: 'The priority of this event ranging from 1 (high) to 9 (low).'
        type: int
        example: '1'
      attendees:
        description: 'The urls of the attendees of this event.'
        type: array
        example: 'https://con.example.com, https://con.example2.com'
      attachments:
        description: 'The urls of the attachments of this event.'
        type: array
        example: 'https://example.org, https://example2.org'
      categories:
        description: 'The urls of the catergories this event belongs to.'
        type: array
        example: 'https://con.example.com, https://con.example2.com'
      comments:
        description: 'The urls of the comments that belong to this event.'
        type: array
        example: 'https://con.example.com, https://con.example2.com'
      schedule:
        description: 'An optional Schedule to which this event belongs'
        type: \Schedule
      calendar:
        description: 'The Calendar to wich this event belongs'
        type: \Calendar
      related: []
      resources: []
      alarms: []
      journal: []
    required:
      - name
      - startDate
      - endDate
  Schedule-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this Schedule'
        type: string
        example: 'My Schedule'
        maxLength: 255
      description:
        description: 'An short description of this Schedule'
        type: string
        example: 'This is the best Schedule ever'
        maxLength: 2550
      byDay:
        description: 'Defines the day(s) of the week on which a recurring Event takes place. Sunday is both 0 and 7.'
        type: string
        example: '1'
      byMonth:
        description: 'Defines the month(s) of the year on which a recurring Event takes place. Specified as an Integer between 1-12. January is 1.'
        type: string
        example: '1'
      byMonthDay:
        description: 'Defines the day(s) of the month on which a recurring Event takes place. Specified as an Integer between 1-31.'
        type: string
        example: '1'
      exceptDates:
        description: 'Defines the day(s) of the month on which a recurring Event takes place. Specified as an Integer between 1-31.'
        type: string
        example: '30'
      repeatCount:
        description: 'Defines the number of times a recurring Event will take place'
        type: int
        example: '10'
      repeatFrequency:
        description: 'Defines the frequency at which Events will occur according to a schedule Schedule. The intervals between events should be defined as a [Duration](https://en.wikipedia.org/wiki/ISO_8601#Durations) of time.'
        type: string
        example: PT1M
        maxLength: 255
      dateCreated:
        description: 'The moment this resource was created'
        type: \Datetime
      dateModified:
        description: 'The moment this resource last Modified'
        type: \Datetime
      calendar:
        description: 'The Calendar to wich this Schedule belongs'
        type: string
      events:
        description: 'The events that belong to or are caused by this Schedule'
        type: \ArrayCollection
      freebusies:
        description: 'The freebusies that belong to or are caused by this Schedule'
        type: \ArrayCollection
      todos:
        description: 'The todos that belong to or are caused by this Schedule'
        type: \ArrayCollection
    required:
      - name
  Schedule-write:
    properties:
      name:
        description: 'The name of this Schedule'
        type: string
        example: 'My Schedule'
        maxLength: 255
      description:
        description: 'An short description of this Schedule'
        type: string
        example: 'This is the best Schedule ever'
        maxLength: 2550
      byDay:
        description: 'Defines the day(s) of the week on which a recurring Event takes place. Sunday is both 0 and 7.'
        type: string
        example: '1'
      byMonth:
        description: 'Defines the month(s) of the year on which a recurring Event takes place. Specified as an Integer between 1-12. January is 1.'
        type: string
        example: '1'
      byMonthDay:
        description: 'Defines the day(s) of the month on which a recurring Event takes place. Specified as an Integer between 1-31.'
        type: string
        example: '1'
      exceptDates:
        description: 'Defines the day(s) of the month on which a recurring Event takes place. Specified as an Integer between 1-31.'
        type: string
        example: '30'
      repeatCount:
        description: 'Defines the number of times a recurring Event will take place'
        type: int
        example: '10'
      repeatFrequency:
        description: 'Defines the frequency at which Events will occur according to a schedule Schedule. The intervals between events should be defined as a [Duration](https://en.wikipedia.org/wiki/ISO_8601#Durations) of time.'
        type: string
        example: PT1M
        maxLength: 255
      calendar:
        description: 'The Calendar to wich this Schedule belongs'
        type: string
      events:
        description: 'The events that belong to or are caused by this Schedule'
        type: \ArrayCollection
      freebusies:
        description: 'The freebusies that belong to or are caused by this Schedule'
        type: \ArrayCollection
      todos:
        description: 'The todos that belong to or are caused by this Schedule'
        type: \ArrayCollection
    required:
      - name
  Calendar-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this Calendar'
        type: string
        example: 'My Calendar'
        maxLength: 255
      description:
        description: 'An short description of this Calendar'
        type: string
        example: 'This is the best Calendar ever'
        maxLength: 2550
      timeZone:
        description: 'The time zone of this calendar'
        type: string
        example: CET
        maxLength: 5
        minLength: 3
      dateCreated:
        description: 'The moment this resource was created'
        type: \Datetime
      dateModified:
        description: 'The moment this resource last Modified'
        type: \Datetime
      events:
        description: 'Events that belong to this Calendar'
        type: array
      schedules:
        description: 'Schedules that belong to this Calendar'
        type: array
      freebusies: []
      journals: []
      todos: []
    required:
      - name
      - timeZone
  Calendar-write:
    properties:
      name:
        description: 'The name of this Calendar'
        type: string
        example: 'My Calendar'
        maxLength: 255
      description:
        description: 'An short description of this Calendar'
        type: string
        example: 'This is the best Calendar ever'
        maxLength: 2550
      timeZone:
        description: 'The time zone of this calendar'
        type: string
        example: CET
        maxLength: 5
        minLength: 3
      events:
        description: 'Events that belong to this Calendar'
        type: array
      schedules:
        description: 'Schedules that belong to this Calendar'
        type: array
      freebusies: []
      journals: []
      todos: []
    required:
      - name
      - timeZone
  Freebusy-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      description:
        description: 'An short description of this Event'
        type: string
        example: 'This is the best Event ever'
        maxLength: 2550
      attendee:
        description: 'The urls of the attendees of this event.'
        type: string
        example: 'https://con.example.com'
        format: url
        maxLength: 255
      comments:
        description: 'The urls of the comments that belong to this event.'
        type: array
        example: 'https://con.example.com, https://con.example2.com'
      contact:
        description: 'Url of this person'
        type: string
        example: 'https://con.example.org'
        format: url
      startDate:
        description: 'The moment this event starts'
        type: string
        example: '2020-04-16 12:24:44'
        format: date-time
      endDate:
        description: 'The moment this event ends'
        type: string
        example: '2020-04-16 12:24:44'
        format: date-time
      duration:
        description: 'The duration of this event.'
        type: \DateInterval
        example: '2'
      organiser:
        description: 'The organiser of this event linked to with an url.'
        type: string
        example: conduction.nl
        maxLength: 255
      freebusy:
        description: 'The determination of the type freebusy. **FREE**, **BUSY**'
        type: string
        example: FREE
      dateCreated:
        description: 'The moment this resource was created'
        type: \DateTime
      dateModified:
        description: 'The moment this resource last Modified'
        type: \DateTime
      calendar: []
      schedule: []
    required:
      - startDate
      - endDate
  Freebusy-write:
    properties:
      description:
        description: 'An short description of this Event'
        type: string
        example: 'This is the best Event ever'
        maxLength: 2550
      attendee:
        description: 'The urls of the attendees of this event.'
        type: string
        example: 'https://con.example.com'
        format: url
        maxLength: 255
      comments:
        description: 'The urls of the comments that belong to this event.'
        type: array
        example: 'https://con.example.com, https://con.example2.com'
      contact:
        description: 'Url of this person'
        type: string
        example: 'https://con.example.org'
        format: url
      startDate:
        description: 'The moment this event starts'
        type: string
        example: '2020-04-16 12:24:44'
        format: date-time
      endDate:
        description: 'The moment this event ends'
        type: string
        example: '2020-04-16 12:24:44'
        format: date-time
      duration:
        description: 'The duration of this event.'
        type: \DateInterval
        example: '2'
      organiser:
        description: 'The organiser of this event linked to with an url.'
        type: string
        example: conduction.nl
        maxLength: 255
      freebusy:
        description: 'The determination of the type freebusy. **FREE**, **BUSY**'
        type: string
        example: FREE
      calendar: []
      schedule: []
    required:
      - startDate
      - endDate
  Journal-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this RequestType'
        type: string
        example: 'My RequestType'
        maxLength: 255
      description:
        description: 'An short description of this Event'
        type: string
        example: 'This is the best Event ever'
        maxLength: 2550
      startDate:
        description: 'The moment this event starts'
        type: string
        example: '2020-04-16 12:24:44'
        format: date-time
      endDate:
        description: 'The moment this event ends'
        type: string
        example: '2020-04-16 12:24:44'
        format: date-time
      class:
        description: 'The security class of this event.'
        type: string
        example: PUBLIC
        maxLength: 255
      organiser:
        description: 'The organiser of this event linked to with an url.'
        type: string
        example: conduction.nl
        maxLength: 255
      status:
        description: 'The status of this event.'
        type: string
        example: Confirmed
        maxLength: 255
      summary:
        description: 'The summary of this event.'
        type: string
        example: 'This is the best event ever.'
        maxLength: 255
      transp:
        description: 'The determination if the event should block the duration of the event for participants.'
        type: string
        example: Transparent
        maxLength: 255
      duration:
        description: 'The duration of this event.'
        type: \DateInterval
        example: '2'
      seq:
        description: 'The version number of this event.'
        type: int
        example: '1'
      priority:
        description: 'The priority of this event ranging from 1 (high) to 9 (low).'
        type: int
        example: '1'
      attendees:
        description: 'The urls of the attendees of this event.'
        type: array
        example: 'https://con.example.com, https://con.example2.com'
      attachments:
        description: 'The urls of the attachments of this event.'
        type: array
        example: 'https://example.org, https://example2.org'
      categories:
        description: 'The urls of the catergories this event belongs to.'
        type: array
        example: 'https://con.example.com, https://con.example2.com'
      comments:
        description: 'The urls of the comments that belong to this event.'
        type: array
        example: 'https://con.example.com, https://con.example2.com'
      dateCreated:
        description: 'The moment this resource was created'
        type: \DateTime
      dateModified:
        description: 'The moment this resource last Modified'
        type: \DateTime
      calendar: []
      event: []
    required:
      - name
      - startDate
      - endDate
  Journal-write:
    properties:
      name:
        description: 'The name of this RequestType'
        type: string
        example: 'My RequestType'
        maxLength: 255
      description:
        description: 'An short description of this Event'
        type: string
        example: 'This is the best Event ever'
        maxLength: 2550
      startDate:
        description: 'The moment this event starts'
        type: string
        example: '2020-04-16 12:24:44'
        format: date-time
      endDate:
        description: 'The moment this event ends'
        type: string
        example: '2020-04-16 12:24:44'
        format: date-time
      class:
        description: 'The security class of this event.'
        type: string
        example: PUBLIC
        maxLength: 255
      organiser:
        description: 'The organiser of this event linked to with an url.'
        type: string
        example: conduction.nl
        maxLength: 255
      status:
        description: 'The status of this event.'
        type: string
        example: Confirmed
        maxLength: 255
      summary:
        description: 'The summary of this event.'
        type: string
        example: 'This is the best event ever.'
        maxLength: 255
      transp:
        description: 'The determination if the event should block the duration of the event for participants.'
        type: string
        example: Transparent
        maxLength: 255
      duration:
        description: 'The duration of this event.'
        type: \DateInterval
        example: '2'
      seq:
        description: 'The version number of this event.'
        type: int
        example: '1'
      priority:
        description: 'The priority of this event ranging from 1 (high) to 9 (low).'
        type: int
        example: '1'
      attendees:
        description: 'The urls of the attendees of this event.'
        type: array
        example: 'https://con.example.com, https://con.example2.com'
      attachments:
        description: 'The urls of the attachments of this event.'
        type: array
        example: 'https://example.org, https://example2.org'
      categories:
        description: 'The urls of the catergories this event belongs to.'
        type: array
        example: 'https://con.example.com, https://con.example2.com'
      comments:
        description: 'The urls of the comments that belong to this event.'
        type: array
        example: 'https://con.example.com, https://con.example2.com'
      calendar: []
      event: []
    required:
      - name
      - startDate
      - endDate
  Todo-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this RequestType'
        type: string
        example: 'My RequestType'
        maxLength: 255
      description:
        description: 'An short description of this Event'
        type: string
        example: 'This is the best Event ever'
        maxLength: 2550
      startDate:
        description: 'The moment this event starts'
        type: string
        example: '2020-04-16 12:24:44'
        format: date-time
      endDate:
        description: 'The moment this event ends'
        type: string
        example: '2020-04-16 12:24:44'
        format: date-time
      location:
        description: 'The location of this event'
        type: string
        example: 'Dam 1, Amsterdam'
        maxLength: 255
      class:
        description: 'The security class of this event.'
        type: string
        example: PUBLIC
        maxLength: 255
      geo:
        description: 'The coordinates of this event.'
        type: string
        example: '81.15147,10.36374,42.26'
        maxLength: 255
      organiser:
        description: 'The organiser of this event linked to with an url.'
        type: string
        example: conduction.nl
        maxLength: 255
      status:
        description: 'The status of this evemt.'
        type: string
        example: Confirmed
        maxLength: 255
      summary:
        description: 'The summary of this event.'
        type: string
        example: 'This is the best event ever.'
        maxLength: 255
      duration:
        description: 'The duration of this event.'
        type: \DateInterval
        example: '2'
      contact:
        description: 'Url of this person'
        type: string
        example: 'https://con.example.org'
        format: url
      seq:
        description: 'The version number of this event.'
        type: int
        example: '1'
      priority:
        description: 'The priority of this event ranging from 1 (high) to 9 (low).'
        type: int
        example: '1'
      attendees:
        description: 'The urls of the attendees of this event.'
        type: array
        example: 'https://con.example.com, https://con.example2.com'
      attachments:
        description: 'The urls of the attachments of this event.'
        type: array
        example: 'https://example.org, https://example2.org'
      categories:
        description: 'The urls of the catergories this event belongs to.'
        type: array
        example: 'https://con.example.com, https://con.example2.com'
      comments:
        description: 'The urls of the comments that belong to this event.'
        type: array
        example: 'https://con.example.com, https://con.example2.com'
      completed:
        description: 'The date and time a to-do is completed.'
        type: string
        example: '2020-04-16 12:24:44'
        format: date-time
      percentageDone:
        description: 'The percentage of a to-do that has been comepleted.'
        type: int
        example: 40%
      dateCreated:
        description: 'The moment this resource was created'
        type: \Datetime
      dateModified:
        description: 'The moment this resource last Modified'
        type: \Datetime
      resources: []
      alarm: []
      calendar: []
      schedule: []
    required:
      - name
      - startDate
      - endDate
  Todo-write:
    properties:
      name:
        description: 'The name of this RequestType'
        type: string
        example: 'My RequestType'
        maxLength: 255
      description:
        description: 'An short description of this Event'
        type: string
        example: 'This is the best Event ever'
        maxLength: 2550
      startDate:
        description: 'The moment this event starts'
        type: string
        example: '2020-04-16 12:24:44'
        format: date-time
      endDate:
        description: 'The moment this event ends'
        type: string
        example: '2020-04-16 12:24:44'
        format: date-time
      location:
        description: 'The location of this event'
        type: string
        example: 'Dam 1, Amsterdam'
        maxLength: 255
      class:
        description: 'The security class of this event.'
        type: string
        example: PUBLIC
        maxLength: 255
      geo:
        description: 'The coordinates of this event.'
        type: string
        example: '81.15147,10.36374,42.26'
        maxLength: 255
      organiser:
        description: 'The organiser of this event linked to with an url.'
        type: string
        example: conduction.nl
        maxLength: 255
      status:
        description: 'The status of this evemt.'
        type: string
        example: Confirmed
        maxLength: 255
      summary:
        description: 'The summary of this event.'
        type: string
        example: 'This is the best event ever.'
        maxLength: 255
      duration:
        description: 'The duration of this event.'
        type: \DateInterval
        example: '2'
      contact:
        description: 'Url of this person'
        type: string
        example: 'https://con.example.org'
        format: url
      seq:
        description: 'The version number of this event.'
        type: int
        example: '1'
      priority:
        description: 'The priority of this event ranging from 1 (high) to 9 (low).'
        type: int
        example: '1'
      attendees:
        description: 'The urls of the attendees of this event.'
        type: array
        example: 'https://con.example.com, https://con.example2.com'
      attachments:
        description: 'The urls of the attachments of this event.'
        type: array
        example: 'https://example.org, https://example2.org'
      categories:
        description: 'The urls of the catergories this event belongs to.'
        type: array
        example: 'https://con.example.com, https://con.example2.com'
      comments:
        description: 'The urls of the comments that belong to this event.'
        type: array
        example: 'https://con.example.com, https://con.example2.com'
      completed:
        description: 'The date and time a to-do is completed.'
        type: string
        example: '2020-04-16 12:24:44'
        format: date-time
      percentageDone:
        description: 'The percentage of a to-do that has been comepleted.'
        type: int
        example: 40%
      resources: []
      alarm: []
      calendar: []
      schedule: []
    required:
      - name
      - startDate
      - endDate
  Resource-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this RequestType'
        type: string
        example: 'My RequestType'
        maxLength: 255
      description:
        description: 'An short description of this Event'
        type: string
        example: 'This is the best Event ever'
        maxLength: 2550
      dateCreated:
        description: 'The moment this resource was created'
        type: \Datetime
      dateModified:
        description: 'The moment this resource last Modified'
        type: \Datetime
      events: []
      todos: []
    required:
      - name
  Resource-write:
    properties:
      name:
        description: 'The name of this RequestType'
        type: string
        example: 'My RequestType'
        maxLength: 255
      description:
        description: 'An short description of this Event'
        type: string
        example: 'This is the best Event ever'
        maxLength: 2550
      events: []
      todos: []
    required:
      - name
  ChangeLog-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line is suspicius'
        maxLength: 2555
      action:
        description: ''
        type: string
      objectId:
        description: ''
        type: string
      objectClass:
        description: ''
        type: string
      version:
        description: ''
        type: int
      data:
        description: ''
        type: array
      username:
        description: ''
        type: string
      session:
        description: 'The moment this request was created'
        type: \sting
        maxLength: 255
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        example: '2020-04-16 12:24:44'
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        example: '2020-04-16 12:24:44'
    required: []
  ChangeLog-write:
    properties:
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line is suspicius'
        maxLength: 2555
    required: []
  AuditTrail-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line looks suspicius'
        maxLength: 2555
      application:
        description: 'The application that made the request'
        type: string
        format: url
        maxLength: 255
      request:
        description: 'The id of the request within that application'
        type: string
        format: url
        maxLength: 255
      user:
        description: 'The user on behalf of wich the request was made'
        type: string
        format: url
        maxLength: 255
      subject:
        description: '???'
        type: \sting
        maxLength: 255
      process:
        description: 'The procces on behalf of wich the request was made'
        type: \sting
        maxLength: 255
      dataElements:
        description: 'The moment this request was created'
        type: array
      dataSubjects:
        description: 'The moment this request was created'
        type: array
      resource:
        description: 'The resource that was requested'
        type: \sting
        maxLength: 255
      resourceType:
        description: 'The type of the resource that was requested'
        type: \sting
        maxLength: 255
      route:
        description: 'The moment this request was created'
        type: \sting
        maxLength: 255
      endpoint:
        description: 'The endpoint that the request was made to'
        type: \sting
        maxLength: 255
      method:
        description: 'The method that was used'
        type: \sting
        maxLength: 255
      accept:
        description: 'The contentType that was reqousted'
        type: \sting
        maxLength: 255
      contentType:
        description: 'The contentType that was suplieds'
        type: \sting
        maxLength: 255
      content:
        description: 'The moment this request was created'
        type: \sting
        maxLength: 2555
      ip:
        description: 'The moment this request was created'
        type: \sting
        maxLength: 255
      session:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      headers:
        description: 'The headers supplied by client'
        type: array
      statusCode:
        description: 'The status code returned to client'
        type: int
        example: '200'
      notFound:
        description: 'Whether or not the reqousted endpoint was found'
        type: bool
        example: 'false'
      forbidden:
        description: 'Whether or not the client was allowed to the reqousted endpoint'
        type: bool
        example: 'false'
      ok:
        description: 'Whether or not there where any problems'
        type: bool
        example: 'true'
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        example: '2020-04-16 12:24:44'
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        example: '2020-04-16 12:24:44'
    required: []
  AuditTrail-write:
    properties:
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line looks suspicius'
        maxLength: 2555
    required: []
tags:
  -
    name: Alarm
    description: |
      Used to describe alarms for Events and Todos.
      
      
  -
    name: Event
    description: |
      An event happening at a certain time and location, such as a concert, lecture, meeting or festival.
      
      
  -
    name: Schedule
    description: |
      A schedule defines a repeating time period used to describe a regularly occurring Event. At a minimum a schedule will specify repeatFrequency which describes the interval between occurences of the event. Additional information can be provided to specify the schedule more precisely. This includes identifying the day(s) of the week or month when the recurring event will take place, in addition to its start and end time. Schedules may also have start and end dates to indicate when they are active, e.g. to define a limited calendar of events.
      
      
  -
    name: Calendar
    description: |
      A Calendar is a collection of events tied to an unque person or resource.
      
      
  -
    name: Freebusy
    description: |
      This entity checks if a person is free or busy for a event.
      
      
  -
    name: Journal
    description: |
      A journal from an event.
      
      
  -
    name: Todo
    description: |
      A to-do from an event.
      
      
  -
    name: Resource
    description: |
      Describes resources that can be needed for an event.
      
      
  -
    name: ChangeLog
    description: |
      An resource representing a log line.
      
      This entity represents a product that can be ordered via the OrderRegistratieComponent.
  -
    name: AuditTrail
    description: |
      An resource representing a log line.
      
      This entity represents a product that can be ordered via the OrderRegistratieComponent.
securityDefinitions:
  JWT-Oauth:
    type: oauth2
    authorizationUrl: 'http://petstore.swagger.io/api/oauth/dialog'
    flow: implicit
    scopes:
      read: 'read right to the AuditTrail resource'
      write: 'write right to the AuditTrail resource'
  JWT-Token:
    type: apiKey
    in: header
    name: Authorization
    scopes:
      read: 'read right to the AuditTrail resource'
      write: 'write right to the AuditTrail resource'
host: irc.zaakonline.nl
servers:
  -
    name: conduction.nl
    url: arc.dev.conduction.nl
externalDocs:
  -
    description: 'OAS Documentatie'
    url: 'http://proto.demo.common-ground.dev'
x-commonground:
  type: service
  developers:
    -
      name: Conduction
      url: 'https://github.com/ConductionNL'
      email: info@conduction.nl
    -
      name: 'Gemeente ''s-Hertogenbosch'
      url: 'https://github.com/gemeenteshertogenbosch'
      email: info@s-hertogenbosch.nl/
    -
      name: 'Gemeente Utrecht'
      url: 'https://github.com/GemeenteUtrecht'
      email: info@utrecht.nl
  builds:
    -
      name: travis
      logo: 'https://travis-ci.org/api-platform/core.svg?branch=master'
      url: 'https://travis-ci.org/api-platform/core'
    -
      name: appveyor
      logo: 'https://ci.appveyor.com/api/projects/status/grwuyprts3wdqx5l?svg=true'
      url: 'https://ci.appveyor.com/project/dunglas/dunglasapibundle'
    -
      name: codecov
      logo: 'https://codecov.io/gh/api-platform/core/branch/master/graph/badge.svg'
      url: 'https://codecov.io/gh/api-platform/core'
    -
      name: SensioLabsInsight
      logo: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93/mini.png'
      url: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93'
    -
      name: 'Scrutinizer Code Quality'
      logo: 'https://scrutinizer-ci.com/g/api-platform/core/badges/quality-score.png?b=master'
      url: 'https://scrutinizer-ci.com/g/api-platform/core/?branch=master'
