openapi: 3.0.2
info:
  title: 'Proto Component'
  version: V.0.1
  description: |
    API Details
    - Component: Proto Component
    - Reference: pc
    - Enviroment: dev
    - Version: V.0.1
    - Repository: []() / [zip](/archive/master.zip)
    - Datamodel: [postman](/schema/openapi.postman_collection) / [oas](/schema/openapi.yaml) / [pdf](/schema/datamodel.pdf) / [mwb](/schema/datamodel.mwb) 
    
    Naast deze JSON rest API is er ook een [graphql](/graphql) interface beschikbaar. 
                             
    Voor het gebruik van deze applicatie is een JWT Token nodig, deze hangt altijd vast aan een applicatie, ofwel user. Geldige JWT Tokens worden aangemaakt bij het registreren van een applicatie en kennen een beperkte houdbaarheid. 
    JWT Tokens kunnen zowel worden verlengd, als opnieuw worden aangevraagd, dit aan de hand van de applicatie id en sleutel.
    Let er bij het meegeven van JWT tokens op dat deze moet worden voorafgegaan door een Bearer en een spatie, onder de header Authorization. De volledig naam wordt daarmee: 'Authorization: Bearer [TOKEN]'.
    
paths:
  /example_entities:
    get:
      tags:
        - ExampleEntity
      operationId: getExampleEntityCollection
      summary: 'Retrieves the collection of ExampleEntity resources.'
      responses:
        200:
          description: 'ExampleEntity collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExampleEntity'
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExampleEntity'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExampleEntity'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExampleEntity'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExampleEntity'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExampleEntity'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExampleEntity'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExampleEntity'
      parameters:
        -
          name: like_name
          in: query
          required: false
          schema:
            type: string
        -
          name: like_description
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    post:
      tags:
        - ExampleEntity
      operationId: postExampleEntityCollection
      summary: 'Creates a ExampleEntity resource.'
      responses:
        201:
          description: 'ExampleEntity resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ExampleEntity'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ExampleEntity'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ExampleEntity'
            application/json:
              schema:
                $ref: '#/components/schemas/ExampleEntity'
            application/xml:
              schema:
                $ref: '#/components/schemas/ExampleEntity'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ExampleEntity'
            text/csv:
              schema:
                $ref: '#/components/schemas/ExampleEntity'
            text/html:
              schema:
                $ref: '#/components/schemas/ExampleEntity'
          links:
            GetExampleEntityItem:
              parameters:
                id: '$response.body#/id'
              operationId: getExampleEntityItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /example_entities/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ExampleEntity'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ExampleEntity'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ExampleEntity'
          application/json:
            schema:
              $ref: '#/components/schemas/ExampleEntity'
          application/xml:
            schema:
              $ref: '#/components/schemas/ExampleEntity'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ExampleEntity'
          text/csv:
            schema:
              $ref: '#/components/schemas/ExampleEntity'
          text/html:
            schema:
              $ref: '#/components/schemas/ExampleEntity'
        description: 'The new ExampleEntity resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/example_entities/{id}':
    get:
      tags:
        - ExampleEntity
      operationId: getExampleEntityItem
      summary: 'Retrieves a ExampleEntity resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'ExampleEntity resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ExampleEntity'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ExampleEntity'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ExampleEntity'
            application/json:
              schema:
                $ref: '#/components/schemas/ExampleEntity'
            application/xml:
              schema:
                $ref: '#/components/schemas/ExampleEntity'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ExampleEntity'
            text/csv:
              schema:
                $ref: '#/components/schemas/ExampleEntity'
            text/html:
              schema:
                $ref: '#/components/schemas/ExampleEntity'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - ExampleEntity
      operationId: deleteExampleEntityItem
      summary: 'Removes the ExampleEntity resource.'
      responses:
        204:
          description: 'ExampleEntity resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - ExampleEntity
      operationId: putExampleEntityItem
      summary: 'Replaces the ExampleEntity resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'ExampleEntity resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ExampleEntity'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ExampleEntity'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ExampleEntity'
            application/json:
              schema:
                $ref: '#/components/schemas/ExampleEntity'
            application/xml:
              schema:
                $ref: '#/components/schemas/ExampleEntity'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ExampleEntity'
            text/csv:
              schema:
                $ref: '#/components/schemas/ExampleEntity'
            text/html:
              schema:
                $ref: '#/components/schemas/ExampleEntity'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ExampleEntity'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ExampleEntity'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ExampleEntity'
          application/json:
            schema:
              $ref: '#/components/schemas/ExampleEntity'
          application/xml:
            schema:
              $ref: '#/components/schemas/ExampleEntity'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ExampleEntity'
          text/csv:
            schema:
              $ref: '#/components/schemas/ExampleEntity'
          text/html:
            schema:
              $ref: '#/components/schemas/ExampleEntity'
        description: 'The updated ExampleEntity resource'
    patch:
      tags:
        - ExampleEntity
      operationId: patchExampleEntityItem
      summary: 'Updates the ExampleEntity resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'ExampleEntity resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ExampleEntity'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ExampleEntity'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ExampleEntity'
            application/json:
              schema:
                $ref: '#/components/schemas/ExampleEntity'
            application/xml:
              schema:
                $ref: '#/components/schemas/ExampleEntity'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ExampleEntity'
            text/csv:
              schema:
                $ref: '#/components/schemas/ExampleEntity'
            text/html:
              schema:
                $ref: '#/components/schemas/ExampleEntity'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ExampleEntity'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ExampleEntity'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ExampleEntity'
          application/json:
            schema:
              $ref: '#/components/schemas/ExampleEntity'
          application/xml:
            schema:
              $ref: '#/components/schemas/ExampleEntity'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ExampleEntity'
          text/csv:
            schema:
              $ref: '#/components/schemas/ExampleEntity'
          text/html:
            schema:
              $ref: '#/components/schemas/ExampleEntity'
        description: 'The updated ExampleEntity resource'
security:
  -
    apiKey: []
components:
  schemas:
    ExampleEntity:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          type: integer
        name:
          type: string
        description:
          type: string
        in_onderzoek: {  }
        ingangs_datum: {  }
  securitySchemes:
    apiKey:
      type: apiKey
      in: header
      description: 'Value for the Authorization header'
      name: Authorization
